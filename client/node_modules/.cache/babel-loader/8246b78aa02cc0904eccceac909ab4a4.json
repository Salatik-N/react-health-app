{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { VictoryTooltip } from 'victory-tooltip';\nimport { ChartLabel } from '../ChartLabel';\nimport { getTheme } from '../ChartUtils';\nexport var ChartTooltip = function ChartTooltip(_a) {\n  var _a$constrainToVisible = _a.constrainToVisibleArea,\n      constrainToVisibleArea = _a$constrainToVisible === void 0 ? false : _a$constrainToVisible,\n      _a$labelComponent = _a.labelComponent,\n      labelComponent = _a$labelComponent === void 0 ? React.createElement(ChartLabel, null) : _a$labelComponent,\n      labelTextAnchor = _a.labelTextAnchor,\n      themeColor = _a.themeColor,\n      themeVariant = _a.themeVariant,\n      _a$theme = _a.theme,\n      theme = _a$theme === void 0 ? getTheme(themeColor, themeVariant) : _a$theme,\n      rest = __rest(_a, [\"constrainToVisibleArea\", \"labelComponent\", \"labelTextAnchor\", \"themeColor\", \"themeVariant\", \"theme\"]);\n\n  var chartLabelComponent = React.cloneElement(labelComponent, Object.assign({\n    textAnchor: labelTextAnchor,\n    theme: theme\n  }, labelComponent.props));\n  return React.createElement(VictoryTooltip, Object.assign({\n    constrainToVisibleArea: constrainToVisibleArea,\n    labelComponent: chartLabelComponent,\n    theme: theme\n  }, rest));\n};\nChartTooltip.displayName = 'ChartTooltip'; // Note: VictoryTooltip.defaultEvents must be hoisted\n\nhoistNonReactStatics(ChartTooltip, VictoryTooltip);","map":{"version":3,"sources":["../../../../src/components/ChartTooltip/ChartTooltip.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,oBAAP,MAAiC,yBAAjC;AASA,SAAS,cAAT,QAAoD,iBAApD;AACA,SAAS,UAAT,QAA2B,eAA3B;AAEA,SAAS,QAAT,QAAyB,eAAzB;AA0PA,OAAO,IAAM,YAAY,GAA+C,SAA3D,YAA2D,CAAC,EAAD,EAUhD;AAViD,8BAQ7B,EAR6B,CACvE,sBADuE;AAAA,MACvE,sBADuE,sCAC9C,KAD8C;AAAA,0BAQ7B,EAR6B,CAEvE,cAFuE;AAAA,MAEvE,cAFuE,kCAEtD,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW,IAAX,CAFsD;AAAA,MAGvE,eAHuE,GAQ7B,EAR6B,CAGvE,eAHuE;AAAA,MAIvE,UAJuE,GAQ7B,EAR6B,CAIvE,UAJuE;AAAA,MAKvE,YALuE,GAQ7B,EAR6B,CAKvE,YALuE;AAAA,iBAQ7B,EAR6B,CAQvE,KARuE;AAAA,MAQvE,KARuE,yBAQ/D,QAAQ,CAAC,UAAD,EAAa,YAAb,CARuD;AAAA,MASpE,IAToE,GAShE,MAAA,CAAA,EAAA,EATgE,CAAA,wBAAA,EAAA,gBAAA,EAAA,iBAAA,EAAA,YAAA,EAAA,cAAA,EAAA,OAAA,CAShE,CATgE;;AAWvE,MAAM,mBAAmB,GAAG,KAAK,CAAC,YAAN,CAAmB,cAAnB,EAAiC,MAAA,CAAA,MAAA,CAAA;AAC3D,IAAA,UAAU,EAAE,eAD+C;AAE3D,IAAA,KAAK,EAAL;AAF2D,GAAA,EAGxD,cAAc,CAAC,KAHyC,CAAjC,CAA5B;AAMA,SACE,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe,MAAA,CAAA,MAAA,CAAA;AACb,IAAA,sBAAsB,EAAE,sBADX;AAEb,IAAA,cAAc,EAAE,mBAFH;AAGb,IAAA,KAAK,EAAE;AAHM,GAAA,EAIT,IAJS,CAAf,CADF;AAQD,CAzBM;AA0BP,YAAY,CAAC,WAAb,GAA2B,cAA3B,C,CAEA;;AACA,oBAAoB,CAAC,YAAD,EAAe,cAAf,CAApB","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { VictoryTooltip } from 'victory-tooltip';\nimport { ChartLabel } from '../ChartLabel';\nimport { getTheme } from '../ChartUtils';\nexport const ChartTooltip = (_a) => {\n    var { constrainToVisibleArea = false, labelComponent = React.createElement(ChartLabel, null), // Note that Victory provides its own label component here\n    labelTextAnchor, themeColor, themeVariant, \n    // destructure last\n    theme = getTheme(themeColor, themeVariant) } = _a, rest = __rest(_a, [\"constrainToVisibleArea\", \"labelComponent\", \"labelTextAnchor\", \"themeColor\", \"themeVariant\", \"theme\"]);\n    const chartLabelComponent = React.cloneElement(labelComponent, Object.assign({ textAnchor: labelTextAnchor, theme }, labelComponent.props));\n    return (React.createElement(VictoryTooltip, Object.assign({ constrainToVisibleArea: constrainToVisibleArea, labelComponent: chartLabelComponent, theme: theme }, rest)));\n};\nChartTooltip.displayName = 'ChartTooltip';\n// Note: VictoryTooltip.defaultEvents must be hoisted\nhoistNonReactStatics(ChartTooltip, VictoryTooltip);\n//# sourceMappingURL=ChartTooltip.js.map"]},"metadata":{},"sourceType":"module"}