{"ast":null,"code":"import * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { VictoryBar } from 'victory-bar';\nimport { getComparativeMeasureData } from './utils';\nimport { ChartBar } from '../ChartBar';\nimport { ChartContainer } from '../ChartContainer';\nimport { ChartBulletStyles } from '../ChartTheme';\nimport { ChartTooltip } from '../ChartTooltip';\nimport { getBulletComparativeMeasureTheme } from '../ChartUtils';\nexport var ChartBulletComparativeMeasure = function ChartBulletComparativeMeasure(_ref) {\n  var _ref$allowTooltip = _ref.allowTooltip,\n      allowTooltip = _ref$allowTooltip === void 0 ? true : _ref$allowTooltip,\n      ariaDesc = _ref.ariaDesc,\n      ariaTitle = _ref.ariaTitle,\n      _ref$barWidth = _ref.barWidth,\n      barWidth = _ref$barWidth === void 0 ? ChartBulletStyles.comparativeMeasureWidth : _ref$barWidth,\n      _ref$constrainToVisib = _ref.constrainToVisibleArea,\n      constrainToVisibleArea = _ref$constrainToVisib === void 0 ? false : _ref$constrainToVisib,\n      data = _ref.data,\n      domain = _ref.domain,\n      _ref$horizontal = _ref.horizontal,\n      horizontal = _ref$horizontal === void 0 ? true : _ref$horizontal,\n      labels = _ref.labels,\n      _ref$measureComponent = _ref.measureComponent,\n      measureComponent = _ref$measureComponent === void 0 ? React.createElement(ChartBar, null) : _ref$measureComponent,\n      padding = _ref.padding,\n      _ref$standalone = _ref.standalone,\n      standalone = _ref$standalone === void 0 ? true : _ref$standalone,\n      themeColor = _ref.themeColor,\n      themeVariant = _ref.themeVariant,\n      y = _ref.y,\n      _ref$theme = _ref.theme,\n      theme = _ref$theme === void 0 ? getBulletComparativeMeasureTheme(themeColor, themeVariant) : _ref$theme,\n      _ref$height = _ref.height,\n      height = _ref$height === void 0 ? theme.bar.height : _ref$height,\n      _ref$width = _ref.width,\n      width = _ref$width === void 0 ? theme.bar.width : _ref$width,\n      _ref$labelComponent = _ref.labelComponent,\n      labelComponent = _ref$labelComponent === void 0 ? React.createElement(ChartTooltip, null) : _ref$labelComponent;\n  var computedData = getComparativeMeasureData({\n    data: data,\n    theme: theme,\n    y: y\n  }); // Label component\n  //\n  // Note: SVG height and width are provided by ChartBullet as a workaround to support constrainToVisibleArea\n\n  var tooltip = React.cloneElement(labelComponent, Object.assign({\n    constrainToVisibleArea: constrainToVisibleArea,\n    dx: function dx() {\n      if (horizontal) {\n        return 0;\n      }\n\n      var result = typeof barWidth === 'function' ? barWidth(data) : barWidth;\n      return result / 2;\n    },\n    dy: function dy() {\n      if (!horizontal) {\n        return 0;\n      }\n\n      var result = typeof barWidth === 'function' ? barWidth(data) : barWidth;\n      return -(result / 2);\n    },\n    orientation: 'top'\n  }, labelComponent.props));\n  var measure = computedData.map(function (dataPoint, index) {\n    return React.cloneElement(measureComponent, Object.assign({\n      barWidth: barWidth,\n      data: [Object.assign({}, dataPoint)],\n      domain: domain,\n      height: height,\n      horizontal: horizontal,\n      labelComponent: allowTooltip ? tooltip : undefined,\n      labels: labels,\n      key: \"pf-chart-bullet-comparative-measure-\".concat(index),\n      padding: padding,\n      standalone: false,\n      theme: theme,\n      width: width\n    }, measureComponent.props));\n  });\n  return standalone ? React.createElement(ChartContainer, {\n    desc: ariaDesc,\n    height: height,\n    title: ariaTitle,\n    width: width\n  }, measure) : React.createElement(React.Fragment, null, measure);\n};\nChartBulletComparativeMeasure.displayName = 'ChartBulletComparativeMeasure'; // Note: VictoryBar.role must be hoisted\n\nhoistNonReactStatics(ChartBulletComparativeMeasure, VictoryBar);","map":{"version":3,"sources":["../../../../src/components/ChartBullet/ChartBulletComparativeMeasure.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { VictoryBar } from 'victory-bar';\nimport { getComparativeMeasureData } from './utils';\nimport { ChartBar } from '../ChartBar';\nimport { ChartContainer } from '../ChartContainer';\nimport { ChartBulletStyles } from '../ChartTheme';\nimport { ChartTooltip } from '../ChartTooltip';\nimport { getBulletComparativeMeasureTheme } from '../ChartUtils';\nexport const ChartBulletComparativeMeasure = ({ allowTooltip = true, ariaDesc, ariaTitle, barWidth = ChartBulletStyles.comparativeMeasureWidth, constrainToVisibleArea = false, data, domain, horizontal = true, labels, measureComponent = React.createElement(ChartBar, null), // Using bar instead of line for tooltip functionality\npadding, standalone = true, themeColor, themeVariant, y, \n// destructure last\ntheme = getBulletComparativeMeasureTheme(themeColor, themeVariant), height = theme.bar.height, width = theme.bar.width, labelComponent = React.createElement(ChartTooltip, null) }) => {\n    const computedData = getComparativeMeasureData({\n        data,\n        theme,\n        y\n    });\n    // Label component\n    //\n    // Note: SVG height and width are provided by ChartBullet as a workaround to support constrainToVisibleArea\n    const tooltip = React.cloneElement(labelComponent, Object.assign({ constrainToVisibleArea, dx: () => {\n            if (horizontal) {\n                return 0;\n            }\n            const result = typeof barWidth === 'function' ? barWidth(data) : barWidth;\n            return result / 2;\n        }, dy: () => {\n            if (!horizontal) {\n                return 0;\n            }\n            const result = typeof barWidth === 'function' ? barWidth(data) : barWidth;\n            return -(result / 2);\n        }, orientation: 'top' }, labelComponent.props));\n    const measure = computedData.map((dataPoint, index) => React.cloneElement(measureComponent, Object.assign({ barWidth, data: [Object.assign({}, dataPoint)], domain,\n        height,\n        horizontal, labelComponent: allowTooltip ? tooltip : undefined, labels, key: `pf-chart-bullet-comparative-measure-${index}`, padding, standalone: false, theme,\n        width }, measureComponent.props)));\n    return standalone ? (React.createElement(ChartContainer, { desc: ariaDesc, height: height, title: ariaTitle, width: width }, measure)) : (React.createElement(React.Fragment, null, measure));\n};\nChartBulletComparativeMeasure.displayName = 'ChartBulletComparativeMeasure';\n// Note: VictoryBar.role must be hoisted\nhoistNonReactStatics(ChartBulletComparativeMeasure, VictoryBar);\n//# sourceMappingURL=ChartBulletComparativeMeasure.js.map"]},"metadata":{},"sourceType":"module"}