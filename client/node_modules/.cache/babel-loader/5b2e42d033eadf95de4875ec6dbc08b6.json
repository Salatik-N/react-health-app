{"ast":null,"code":"import { Helpers } from 'victory-core'; // Returns the origin for pie based charts. For example, something with a radius such as pie, donut, donut utilization,\n// and donut threshold.\n\nexport var getPieOrigin = function getPieOrigin(_ref) {\n  var height = _ref.height,\n      padding = _ref.padding,\n      width = _ref.width;\n\n  var _Helpers$getPadding = Helpers.getPadding({\n    padding: padding\n  }),\n      top = _Helpers$getPadding.top,\n      bottom = _Helpers$getPadding.bottom,\n      left = _Helpers$getPadding.left,\n      right = _Helpers$getPadding.right;\n\n  var radius = Helpers.getRadius({\n    height: height,\n    width: width,\n    padding: padding\n  });\n  var offsetX = (width - radius * 2 - left - right) / 2;\n  var offsetY = (height - radius * 2 - top - bottom) / 2;\n  return {\n    x: radius + left + offsetX,\n    y: radius + top + offsetY\n  };\n};","map":{"version":3,"sources":["../../../../src/components/ChartUtils/chart-origin.ts"],"names":[],"mappings":"AAAA,SAAS,OAAT,QAAwB,cAAxB,C,CAQA;AACA;;AACA,OAAO,IAAM,YAAY,GAAG,SAAf,YAAe,OAAwD;AAAA,MAArD,MAAqD,QAArD,MAAqD;AAAA,MAA7C,OAA6C,QAA7C,OAA6C;AAAA,MAApC,KAAoC,QAApC,KAAoC;;AAClF,4BAAqC,OAAO,CAAC,UAAR,CAAmB;AAAE,IAAA,OAAO,EAAP;AAAF,GAAnB,CAArC;AAAA,MAAQ,GAAR,uBAAQ,GAAR;AAAA,MAAa,MAAb,uBAAa,MAAb;AAAA,MAAqB,IAArB,uBAAqB,IAArB;AAAA,MAA2B,KAA3B,uBAA2B,KAA3B;;AACA,MAAM,MAAM,GAAG,OAAO,CAAC,SAAR,CAAkB;AAAE,IAAA,MAAM,EAAN,MAAF;AAAU,IAAA,KAAK,EAAL,KAAV;AAAiB,IAAA,OAAO,EAAP;AAAjB,GAAlB,CAAf;AACA,MAAM,OAAO,GAAG,CAAC,KAAK,GAAG,MAAM,GAAG,CAAjB,GAAqB,IAArB,GAA4B,KAA7B,IAAsC,CAAtD;AACA,MAAM,OAAO,GAAG,CAAC,MAAM,GAAG,MAAM,GAAG,CAAlB,GAAsB,GAAtB,GAA4B,MAA7B,IAAuC,CAAvD;AACA,SAAO;AACL,IAAA,CAAC,EAAE,MAAM,GAAG,IAAT,GAAgB,OADd;AAEL,IAAA,CAAC,EAAE,MAAM,GAAG,GAAT,GAAe;AAFb,GAAP;AAID,CATM","sourceRoot":"","sourcesContent":["import { Helpers } from 'victory-core';\n// Returns the origin for pie based charts. For example, something with a radius such as pie, donut, donut utilization,\n// and donut threshold.\nexport const getPieOrigin = ({ height, padding, width }) => {\n    const { top, bottom, left, right } = Helpers.getPadding({ padding });\n    const radius = Helpers.getRadius({ height, width, padding });\n    const offsetX = (width - radius * 2 - left - right) / 2;\n    const offsetY = (height - radius * 2 - top - bottom) / 2;\n    return {\n        x: radius + left + offsetX,\n        y: radius + top + offsetY\n    };\n};\n//# sourceMappingURL=chart-origin.js.map"]},"metadata":{},"sourceType":"module"}