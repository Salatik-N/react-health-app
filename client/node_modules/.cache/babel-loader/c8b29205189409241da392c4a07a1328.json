{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { Helpers } from 'victory-core';\nimport { VictoryLegend } from 'victory-legend';\nimport { ChartLabel } from '../ChartLabel';\nimport { ChartLegend } from '../ChartLegend';\nimport { ChartLegendTooltipLabel } from './ChartLegendTooltipLabel';\nimport { ChartLegendTooltipStyles } from '../ChartTheme';\nimport { getLegendTooltipDataProps, getLegendTooltipSize, getLegendTooltipVisibleData, getLegendTooltipVisibleText, getTheme } from '../ChartUtils';\nexport var ChartLegendTooltipContent = function ChartLegendTooltipContent(_a) {\n  var activePoints = _a.activePoints,\n      center = _a.center,\n      datum = _a.datum,\n      _a$dx = _a.dx,\n      dx = _a$dx === void 0 ? 0 : _a$dx,\n      _a$dy = _a.dy,\n      dy = _a$dy === void 0 ? 0 : _a$dy,\n      flyoutHeight = _a.flyoutHeight,\n      flyoutWidth = _a.flyoutWidth,\n      height = _a.height,\n      _a$labelComponent = _a.labelComponent,\n      labelComponent = _a$labelComponent === void 0 ? React.createElement(ChartLegendTooltipLabel, null) : _a$labelComponent,\n      _a$legendComponent = _a.legendComponent,\n      legendComponent = _a$legendComponent === void 0 ? React.createElement(ChartLegend, null) : _a$legendComponent,\n      legendData = _a.legendData,\n      text = _a.text,\n      themeColor = _a.themeColor,\n      themeVariant = _a.themeVariant,\n      title = _a.title,\n      _a$titleComponent = _a.titleComponent,\n      titleComponent = _a$titleComponent === void 0 ? React.createElement(ChartLabel, null) : _a$titleComponent,\n      width = _a.width,\n      _a$theme = _a.theme,\n      theme = _a$theme === void 0 ? getTheme(themeColor, themeVariant) : _a$theme,\n      rest = __rest(_a, [\"activePoints\", \"center\", \"datum\", \"dx\", \"dy\", \"flyoutHeight\", \"flyoutWidth\", \"height\", \"labelComponent\", \"legendComponent\", \"legendData\", \"text\", \"themeColor\", \"themeVariant\", \"title\", \"titleComponent\", \"width\", \"theme\"]);\n\n  var pointerLength = theme && theme.tooltip ? Helpers.evaluateProp(theme.tooltip.pointerLength) : 10;\n  var legendProps = getLegendTooltipDataProps(legendComponent.props);\n  var visibleLegendData = getLegendTooltipVisibleData({\n    activePoints: activePoints,\n    colorScale: legendProps.colorScale,\n    legendData: legendData,\n    text: text,\n    theme: theme\n  }); // Component offsets\n\n  var legendOffsetX = 0;\n  var legendOffsetY = title ? 5 : -10;\n  var titleOffsetX = 10;\n  var titleOffsetY = 0; // Returns x position of flyout\n\n  var getX = function getX() {\n    if (!(center || flyoutWidth || width)) {\n      var x = rest.x;\n      return x ? x : undefined;\n    }\n\n    var _flyoutWidth = Helpers.evaluateProp(flyoutWidth);\n\n    if (width > center.x + _flyoutWidth + pointerLength) {\n      return center.x + ChartLegendTooltipStyles.flyout.padding / 2;\n    } else if (center.x < _flyoutWidth + pointerLength) {\n      return ChartLegendTooltipStyles.flyout.padding / 2 - pointerLength;\n    } else {\n      return center.x - _flyoutWidth;\n    }\n  }; // Returns y position\n\n\n  var getY = function getY() {\n    if (!(center || flyoutHeight || height)) {\n      var y = rest.y;\n      return y ? y : undefined;\n    }\n\n    var _flyoutHeight = Helpers.evaluateProp(flyoutHeight);\n\n    if (center.y < _flyoutHeight / 2) {\n      return ChartLegendTooltipStyles.flyout.padding / 2;\n    } else if (center.y > height - _flyoutHeight / 2) {\n      return height - _flyoutHeight + ChartLegendTooltipStyles.flyout.padding / 2;\n    } else {\n      return center.y - _flyoutHeight / 2 + ChartLegendTooltipStyles.flyout.padding / 2;\n    }\n  }; // Min & max dimensions do not include flyout padding\n\n\n  var maxLegendDimensions = getLegendTooltipSize({\n    legendData: visibleLegendData,\n    legendProps: legendProps,\n    text: getLegendTooltipVisibleText({\n      activePoints: activePoints,\n      legendData: legendData,\n      text: text\n    }),\n    theme: theme\n  });\n  var minLegendDimensions = getLegendTooltipSize({\n    legendData: [{\n      name: ''\n    }],\n    legendProps: legendProps,\n    theme: theme\n  }); // Returns the label component\n\n  var getLabelComponent = function getLabelComponent() {\n    return React.cloneElement(labelComponent, Object.assign({\n      dx: maxLegendDimensions.width - minLegendDimensions.width,\n      legendData: visibleLegendData\n    }, labelComponent.props));\n  }; // Returns the title component\n\n\n  var getTitleComponent = function getTitleComponent() {\n    var _title = title instanceof Function ? title(datum) : title;\n\n    return React.cloneElement(titleComponent, Object.assign({\n      style: {\n        fill: ChartLegendTooltipStyles.label.fill,\n        fontWeight: ChartLegendTooltipStyles.label.fontWeight\n      },\n      text: _title,\n      textAnchor: 'start',\n      x: getX() + titleOffsetX + Helpers.evaluateProp(dx),\n      y: getY() + titleOffsetY + Helpers.evaluateProp(dy)\n    }, titleComponent.props));\n  }; // Returns the legebd component\n\n\n  var getLegendComponent = function getLegendComponent() {\n    return React.cloneElement(legendComponent, Object.assign({\n      data: getLegendTooltipVisibleData({\n        activePoints: activePoints,\n        colorScale: legendProps.colorScale,\n        legendData: legendData,\n        text: text,\n        textAsLegendData: true,\n        theme: theme\n      }),\n      labelComponent: getLabelComponent(),\n      standalone: false,\n      theme: theme,\n      x: getX() + legendOffsetX + Helpers.evaluateProp(dx),\n      y: getY() + legendOffsetY + Helpers.evaluateProp(dy)\n    }, legendProps));\n  };\n\n  return React.createElement(React.Fragment, null, getTitleComponent(), getLegendComponent());\n};\nChartLegendTooltipContent.displayName = 'ChartLegendTooltipContent'; // Note: VictoryLegend.role must be hoisted, but getBaseProps causes error with ChartVoronoiContainer\n\nhoistNonReactStatics(ChartLegendTooltipContent, VictoryLegend, {\n  getBaseProps: true\n});","map":{"version":3,"sources":["../../../../src/components/ChartLegendTooltip/ChartLegendTooltipContent.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { Helpers } from 'victory-core';\nimport { VictoryLegend } from 'victory-legend';\nimport { ChartLabel } from '../ChartLabel';\nimport { ChartLegend } from '../ChartLegend';\nimport { ChartLegendTooltipLabel } from './ChartLegendTooltipLabel';\nimport { ChartLegendTooltipStyles } from '../ChartTheme';\nimport { getLegendTooltipDataProps, getLegendTooltipSize, getLegendTooltipVisibleData, getLegendTooltipVisibleText, getTheme } from '../ChartUtils';\nexport const ChartLegendTooltipContent = (_a) => {\n    var { activePoints, center, datum, dx = 0, dy = 0, flyoutHeight, flyoutWidth, height, labelComponent = React.createElement(ChartLegendTooltipLabel, null), legendComponent = React.createElement(ChartLegend, null), legendData, text, themeColor, themeVariant, title, titleComponent = React.createElement(ChartLabel, null), width, \n    // destructure last\n    theme = getTheme(themeColor, themeVariant) } = _a, rest = __rest(_a, [\"activePoints\", \"center\", \"datum\", \"dx\", \"dy\", \"flyoutHeight\", \"flyoutWidth\", \"height\", \"labelComponent\", \"legendComponent\", \"legendData\", \"text\", \"themeColor\", \"themeVariant\", \"title\", \"titleComponent\", \"width\", \"theme\"]);\n    const pointerLength = theme && theme.tooltip ? Helpers.evaluateProp(theme.tooltip.pointerLength) : 10;\n    const legendProps = getLegendTooltipDataProps(legendComponent.props);\n    const visibleLegendData = getLegendTooltipVisibleData({\n        activePoints,\n        colorScale: legendProps.colorScale,\n        legendData,\n        text,\n        theme\n    });\n    // Component offsets\n    const legendOffsetX = 0;\n    const legendOffsetY = title ? 5 : -10;\n    const titleOffsetX = 10;\n    const titleOffsetY = 0;\n    // Returns x position of flyout\n    const getX = () => {\n        if (!(center || flyoutWidth || width)) {\n            const x = rest.x;\n            return x ? x : undefined;\n        }\n        const _flyoutWidth = Helpers.evaluateProp(flyoutWidth);\n        if (width > center.x + _flyoutWidth + pointerLength) {\n            return center.x + ChartLegendTooltipStyles.flyout.padding / 2;\n        }\n        else if (center.x < _flyoutWidth + pointerLength) {\n            return ChartLegendTooltipStyles.flyout.padding / 2 - pointerLength;\n        }\n        else {\n            return center.x - _flyoutWidth;\n        }\n    };\n    // Returns y position\n    const getY = () => {\n        if (!(center || flyoutHeight || height)) {\n            const y = rest.y;\n            return y ? y : undefined;\n        }\n        const _flyoutHeight = Helpers.evaluateProp(flyoutHeight);\n        if (center.y < _flyoutHeight / 2) {\n            return ChartLegendTooltipStyles.flyout.padding / 2;\n        }\n        else if (center.y > height - _flyoutHeight / 2) {\n            return height - _flyoutHeight + ChartLegendTooltipStyles.flyout.padding / 2;\n        }\n        else {\n            return center.y - _flyoutHeight / 2 + ChartLegendTooltipStyles.flyout.padding / 2;\n        }\n    };\n    // Min & max dimensions do not include flyout padding\n    const maxLegendDimensions = getLegendTooltipSize({\n        legendData: visibleLegendData,\n        legendProps,\n        text: getLegendTooltipVisibleText({ activePoints, legendData, text }),\n        theme\n    });\n    const minLegendDimensions = getLegendTooltipSize({\n        legendData: [{ name: '' }],\n        legendProps,\n        theme\n    });\n    // Returns the label component\n    const getLabelComponent = () => React.cloneElement(labelComponent, Object.assign({ dx: maxLegendDimensions.width - minLegendDimensions.width, legendData: visibleLegendData }, labelComponent.props));\n    // Returns the title component\n    const getTitleComponent = () => {\n        const _title = title instanceof Function ? title(datum) : title;\n        return React.cloneElement(titleComponent, Object.assign({ style: {\n                fill: ChartLegendTooltipStyles.label.fill,\n                fontWeight: ChartLegendTooltipStyles.label.fontWeight\n            }, text: _title, textAnchor: 'start', x: getX() + titleOffsetX + Helpers.evaluateProp(dx), y: getY() + titleOffsetY + Helpers.evaluateProp(dy) }, titleComponent.props));\n    };\n    // Returns the legebd component\n    const getLegendComponent = () => React.cloneElement(legendComponent, Object.assign({ data: getLegendTooltipVisibleData({\n            activePoints,\n            colorScale: legendProps.colorScale,\n            legendData,\n            text,\n            textAsLegendData: true,\n            theme\n        }), labelComponent: getLabelComponent(), standalone: false, theme, x: getX() + legendOffsetX + Helpers.evaluateProp(dx), y: getY() + legendOffsetY + Helpers.evaluateProp(dy) }, legendProps));\n    return (React.createElement(React.Fragment, null,\n        getTitleComponent(),\n        getLegendComponent()));\n};\nChartLegendTooltipContent.displayName = 'ChartLegendTooltipContent';\n// Note: VictoryLegend.role must be hoisted, but getBaseProps causes error with ChartVoronoiContainer\nhoistNonReactStatics(ChartLegendTooltipContent, VictoryLegend, { getBaseProps: true });\n//# sourceMappingURL=ChartLegendTooltipContent.js.map"]},"metadata":{},"sourceType":"module"}