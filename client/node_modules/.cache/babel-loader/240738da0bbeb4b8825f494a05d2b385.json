{"ast":null,"code":"import _toConsumableArray from \"C:/Users/37529/react-apps/health-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { Data } from 'victory-core';\nimport { getBulletComparativeErrorMeasureTheme, getBulletComparativeMeasureTheme, getBulletComparativeWarningMeasureTheme, getBulletPrimaryDotMeasureTheme, getBulletPrimaryNegativeMeasureTheme, getBulletPrimarySegmentedMeasureTheme, getBulletQualitativeRangeTheme } from '../../ChartUtils';\nexport var getComparativeMeasureData = function getComparativeMeasureData(_ref) {\n  var data = _ref.data,\n      themeColor = _ref.themeColor,\n      themeVariant = _ref.themeVariant,\n      _ref$theme = _ref.theme,\n      theme = _ref$theme === void 0 ? getBulletComparativeMeasureTheme(themeColor, themeVariant) : _ref$theme,\n      y = _ref.y;\n  var datum = [];\n  Data.formatData(data, {\n    y: y\n  }, ['y']).forEach(function (dataPoint, index) {\n    datum.push(Object.assign(Object.assign({}, dataPoint), {\n      _index: index // Save to sync legend color\n\n    }));\n  });\n  var computedData = datum.map(function (dataPoint) {\n    return Object.assign(Object.assign({}, dataPoint), {\n      x: 1,\n      _x: 1,\n      y0: dataPoint._y,\n      _y0: dataPoint._y,\n      _color: theme.bar.style.data.fill // Save to sync legend color\n\n    });\n  });\n  return computedData;\n};\nexport var getComparativeErrorMeasureData = function getComparativeErrorMeasureData(_ref2) {\n  var data = _ref2.data,\n      themeColor = _ref2.themeColor,\n      themeVariant = _ref2.themeVariant,\n      _ref2$theme = _ref2.theme,\n      theme = _ref2$theme === void 0 ? getBulletComparativeErrorMeasureTheme(themeColor, themeVariant) : _ref2$theme,\n      y = _ref2.y;\n  return getComparativeMeasureData({\n    data: data,\n    theme: theme,\n    themeColor: themeColor,\n    themeVariant: themeVariant,\n    y: y\n  });\n};\nexport var getComparativeWarningMeasureData = function getComparativeWarningMeasureData(_ref3) {\n  var data = _ref3.data,\n      themeColor = _ref3.themeColor,\n      themeVariant = _ref3.themeVariant,\n      _ref3$theme = _ref3.theme,\n      theme = _ref3$theme === void 0 ? getBulletComparativeWarningMeasureTheme(themeColor, themeVariant) : _ref3$theme,\n      y = _ref3.y;\n  return getComparativeMeasureData({\n    data: data,\n    theme: theme,\n    themeColor: themeColor,\n    themeVariant: themeVariant,\n    y: y\n  });\n};\nexport var getPrimaryDotMeasureData = function getPrimaryDotMeasureData(_ref4) {\n  var data = _ref4.data,\n      invert = _ref4.invert,\n      themeColor = _ref4.themeColor,\n      themeVariant = _ref4.themeVariant,\n      _ref4$theme = _ref4.theme,\n      theme = _ref4$theme === void 0 ? getBulletPrimaryDotMeasureTheme(themeColor, themeVariant) : _ref4$theme,\n      y = _ref4.y,\n      y0 = _ref4.y0;\n  return getComparativeMeasureData({\n    data: data,\n    invert: invert,\n    theme: theme,\n    themeColor: themeColor,\n    themeVariant: themeVariant,\n    y: y,\n    y0: y0\n  });\n};\nexport var getPrimarySegmentedMeasureData = function getPrimarySegmentedMeasureData(_ref5) {\n  var data = _ref5.data,\n      invert = _ref5.invert,\n      themeColor = _ref5.themeColor,\n      themeVariant = _ref5.themeVariant,\n      _ref5$theme = _ref5.theme,\n      theme = _ref5$theme === void 0 ? getBulletPrimarySegmentedMeasureTheme(themeColor, themeVariant) : _ref5$theme,\n      _ref5$negativeMeasure = _ref5.negativeMeasureTheme,\n      negativeMeasureTheme = _ref5$negativeMeasure === void 0 ? getBulletPrimaryNegativeMeasureTheme(themeColor, themeVariant) : _ref5$negativeMeasure,\n      y = _ref5.y,\n      y0 = _ref5.y0;\n  var negativeDatum = [];\n  var positiveDatum = [];\n  Data.formatData(data, {\n    y: y,\n    y0: y0\n  }, ['y', 'y0']).forEach(function (dataPoint, index) {\n    if (dataPoint._y < 0) {\n      negativeDatum.push(Object.assign(Object.assign({}, dataPoint), {\n        _index: index // Save to sync legend color\n\n      }));\n    } else {\n      positiveDatum.push(Object.assign(Object.assign({}, dataPoint), {\n        _index: index // Save to sync legend color\n\n      }));\n    }\n  }); // Instead of relying on colorScale, colors must be added to each measure in ascending order\n\n  var negativeComputedData = negativeDatum.sort(function (a, b) {\n    return b._y - a._y;\n  }).map(function (dataPoint, index) {\n    return Object.assign(Object.assign({}, dataPoint), {\n      x: 1,\n      _x: 1,\n      _color: invert ? theme.group.colorScale[index % theme.group.colorScale.length] : negativeMeasureTheme.group.colorScale[index % theme.group.colorScale.length]\n    });\n  } // Sort descending so largest bar is appears behind others\n  ).reverse(); // Instead of relying on colorScale, colors must be added to each measure in ascending order\n\n  var positiveComputedData = positiveDatum.sort(function (a, b) {\n    return a._y - b._y;\n  }).map(function (dataPoint, index) {\n    return Object.assign(Object.assign({}, dataPoint), {\n      x: 1,\n      _x: 1,\n      _color: invert ? negativeMeasureTheme.group.colorScale[index % theme.group.colorScale.length] : theme.group.colorScale[index % theme.group.colorScale.length]\n    });\n  } // Sort descending so largest bar is appears behind others\n  ).reverse();\n  return [].concat(_toConsumableArray(negativeComputedData), _toConsumableArray(positiveComputedData));\n};\nexport var getQualitativeRangeData = function getQualitativeRangeData(_ref6) {\n  var data = _ref6.data,\n      invert = _ref6.invert,\n      themeColor = _ref6.themeColor,\n      themeVariant = _ref6.themeVariant,\n      _ref6$theme = _ref6.theme,\n      theme = _ref6$theme === void 0 ? getBulletQualitativeRangeTheme(themeColor, themeVariant) : _ref6$theme,\n      y = _ref6.y,\n      y0 = _ref6.y0;\n  var datum = [];\n  Data.formatData(data, {\n    y: y,\n    y0: y0\n  }, ['y', 'y0']).forEach(function (dataPoint, index) {\n    datum.push(Object.assign(Object.assign({}, dataPoint), {\n      _index: index // Save to sync legend color\n\n    }));\n  });\n  var computedData = datum.sort(function (a, b) {\n    return invert ? b._y - a._y : a._y - b._y;\n  }).map(function (dataPoint, index) {\n    return Object.assign(Object.assign({}, dataPoint), {\n      x: 1,\n      _x: 1,\n      // Instead of relying on colorScale, colors must be added to each measure in ascending order\n      _color: theme.group.colorScale[index % theme.group.colorScale.length]\n    });\n  } // Sort descending so largest bar is appears behind others\n  ).reverse();\n  return computedData;\n};","map":{"version":3,"sources":["../../../../../src/components/ChartBullet/utils/chart-bullet-data.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { Data } from 'victory-core';\nimport { getBulletComparativeErrorMeasureTheme, getBulletComparativeMeasureTheme, getBulletComparativeWarningMeasureTheme, getBulletPrimaryDotMeasureTheme, getBulletPrimaryNegativeMeasureTheme, getBulletPrimarySegmentedMeasureTheme, getBulletQualitativeRangeTheme } from '../../ChartUtils';\nexport const getComparativeMeasureData = ({ data, themeColor, themeVariant, \n// destructure last\ntheme = getBulletComparativeMeasureTheme(themeColor, themeVariant), y }) => {\n    const datum = [];\n    Data.formatData(data, { y }, ['y']).forEach((dataPoint, index) => {\n        datum.push(Object.assign(Object.assign({}, dataPoint), { _index: index // Save to sync legend color\n         }));\n    });\n    const computedData = datum.map((dataPoint) => (Object.assign(Object.assign({}, dataPoint), { x: 1, _x: 1, y0: dataPoint._y, _y0: dataPoint._y, _color: theme.bar.style.data.fill // Save to sync legend color\n     })));\n    return computedData;\n};\nexport const getComparativeErrorMeasureData = ({ data, themeColor, themeVariant, \n// destructure last\ntheme = getBulletComparativeErrorMeasureTheme(themeColor, themeVariant), y }) => getComparativeMeasureData({\n    data,\n    theme,\n    themeColor,\n    themeVariant,\n    y\n});\nexport const getComparativeWarningMeasureData = ({ data, themeColor, themeVariant, \n// destructure last\ntheme = getBulletComparativeWarningMeasureTheme(themeColor, themeVariant), y }) => getComparativeMeasureData({\n    data,\n    theme,\n    themeColor,\n    themeVariant,\n    y\n});\nexport const getPrimaryDotMeasureData = ({ data, invert, themeColor, themeVariant, \n// destructure last\ntheme = getBulletPrimaryDotMeasureTheme(themeColor, themeVariant), y, y0 }) => getComparativeMeasureData({\n    data,\n    invert,\n    theme,\n    themeColor,\n    themeVariant,\n    y,\n    y0\n});\nexport const getPrimarySegmentedMeasureData = ({ data, invert, themeColor, themeVariant, \n// destructure last\ntheme = getBulletPrimarySegmentedMeasureTheme(themeColor, themeVariant), negativeMeasureTheme = getBulletPrimaryNegativeMeasureTheme(themeColor, themeVariant), y, y0 }) => {\n    const negativeDatum = [];\n    const positiveDatum = [];\n    Data.formatData(data, { y, y0 }, ['y', 'y0']).forEach((dataPoint, index) => {\n        if (dataPoint._y < 0) {\n            negativeDatum.push(Object.assign(Object.assign({}, dataPoint), { _index: index // Save to sync legend color\n             }));\n        }\n        else {\n            positiveDatum.push(Object.assign(Object.assign({}, dataPoint), { _index: index // Save to sync legend color\n             }));\n        }\n    });\n    // Instead of relying on colorScale, colors must be added to each measure in ascending order\n    const negativeComputedData = negativeDatum\n        .sort((a, b) => b._y - a._y)\n        .map((dataPoint, index) => (Object.assign(Object.assign({}, dataPoint), { x: 1, _x: 1, _color: invert\n            ? theme.group.colorScale[index % theme.group.colorScale.length]\n            : negativeMeasureTheme.group.colorScale[index % theme.group.colorScale.length] }))\n    // Sort descending so largest bar is appears behind others\n    )\n        .reverse();\n    // Instead of relying on colorScale, colors must be added to each measure in ascending order\n    const positiveComputedData = positiveDatum\n        .sort((a, b) => a._y - b._y)\n        .map((dataPoint, index) => (Object.assign(Object.assign({}, dataPoint), { x: 1, _x: 1, _color: invert\n            ? negativeMeasureTheme.group.colorScale[index % theme.group.colorScale.length]\n            : theme.group.colorScale[index % theme.group.colorScale.length] }))\n    // Sort descending so largest bar is appears behind others\n    )\n        .reverse();\n    return [...negativeComputedData, ...positiveComputedData];\n};\nexport const getQualitativeRangeData = ({ data, invert, themeColor, themeVariant, \n// destructure last\ntheme = getBulletQualitativeRangeTheme(themeColor, themeVariant), y, y0 }) => {\n    const datum = [];\n    Data.formatData(data, { y, y0 }, ['y', 'y0']).forEach((dataPoint, index) => {\n        datum.push(Object.assign(Object.assign({}, dataPoint), { _index: index // Save to sync legend color\n         }));\n    });\n    const computedData = datum\n        .sort((a, b) => (invert ? b._y - a._y : a._y - b._y))\n        .map((dataPoint, index) => (Object.assign(Object.assign({}, dataPoint), { x: 1, _x: 1, \n        // Instead of relying on colorScale, colors must be added to each measure in ascending order\n        _color: theme.group.colorScale[index % theme.group.colorScale.length] }))\n    // Sort descending so largest bar is appears behind others\n    )\n        .reverse();\n    return computedData;\n};\n//# sourceMappingURL=chart-bullet-data.js.map"]},"metadata":{},"sourceType":"module"}