{"ast":null,"code":"import * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { VictoryBar } from 'victory-bar';\nimport { getQualitativeRangeData } from './utils';\nimport { ChartBar } from '../ChartBar';\nimport { ChartContainer } from '../ChartContainer';\nimport { ChartBulletStyles } from '../ChartTheme';\nimport { ChartTooltip } from '../ChartTooltip';\nimport { getBulletQualitativeRangeTheme } from '../ChartUtils';\nexport var ChartBulletQualitativeRange = function ChartBulletQualitativeRange(_ref) {\n  var _ref$allowTooltip = _ref.allowTooltip,\n      allowTooltip = _ref$allowTooltip === void 0 ? true : _ref$allowTooltip,\n      ariaDesc = _ref.ariaDesc,\n      ariaTitle = _ref.ariaTitle,\n      _ref$barWidth = _ref.barWidth,\n      barWidth = _ref$barWidth === void 0 ? ChartBulletStyles.qualitativeRangeWidth : _ref$barWidth,\n      _ref$constrainToVisib = _ref.constrainToVisibleArea,\n      constrainToVisibleArea = _ref$constrainToVisib === void 0 ? false : _ref$constrainToVisib,\n      data = _ref.data,\n      domain = _ref.domain,\n      _ref$horizontal = _ref.horizontal,\n      horizontal = _ref$horizontal === void 0 ? true : _ref$horizontal,\n      _ref$invert = _ref.invert,\n      invert = _ref$invert === void 0 ? false : _ref$invert,\n      labels = _ref.labels,\n      _ref$measureComponent = _ref.measureComponent,\n      measureComponent = _ref$measureComponent === void 0 ? React.createElement(ChartBar, null) : _ref$measureComponent,\n      padding = _ref.padding,\n      _ref$standalone = _ref.standalone,\n      standalone = _ref$standalone === void 0 ? true : _ref$standalone,\n      themeColor = _ref.themeColor,\n      themeVariant = _ref.themeVariant,\n      y = _ref.y,\n      y0 = _ref.y0,\n      _ref$theme = _ref.theme,\n      theme = _ref$theme === void 0 ? getBulletQualitativeRangeTheme(themeColor, themeVariant) : _ref$theme,\n      _ref$height = _ref.height,\n      height = _ref$height === void 0 ? theme.group.height : _ref$height,\n      _ref$width = _ref.width,\n      width = _ref$width === void 0 ? theme.group.width : _ref$width,\n      _ref$labelComponent = _ref.labelComponent,\n      labelComponent = _ref$labelComponent === void 0 ? React.createElement(ChartTooltip, null) : _ref$labelComponent;\n  var computedData = getQualitativeRangeData({\n    data: data,\n    invert: invert,\n    theme: theme,\n    y: y,\n    y0: y0\n  }); // Label component\n  //\n  // The x and y calculations below ensure that the tooltip appears above the bar, instead of vertically centered.\n  // Having the tooltip vertically centered is visually confusing with comparative measures.\n  //\n  // Note: SVG height and width are provided by ChartBullet as a workaround to support constrainToVisibleArea\n\n  var tooltip = React.cloneElement(labelComponent, Object.assign({\n    constrainToVisibleArea: constrainToVisibleArea,\n    dx: function dx() {\n      if (horizontal) {\n        return 0;\n      }\n\n      var result = typeof barWidth === 'function' ? barWidth(data) : barWidth;\n      return result / 2;\n    },\n    dy: function dy() {\n      if (!horizontal) {\n        return 0;\n      }\n\n      var result = typeof barWidth === 'function' ? barWidth(data) : barWidth;\n      return -(result / 2);\n    },\n    orientation: 'top'\n  }, labelComponent.props));\n  var measure = computedData.map(function (dataPoint, index) {\n    return React.cloneElement(measureComponent, Object.assign({\n      barWidth: barWidth,\n      data: [Object.assign({}, dataPoint)],\n      domain: domain,\n      height: height,\n      horizontal: horizontal,\n      key: \"pf-chart-bullet-qualitative-range-\".concat(index),\n      labelComponent: allowTooltip ? tooltip : undefined,\n      labels: labels,\n      padding: padding,\n      standalone: false,\n      style: {\n        data: {\n          fill: dataPoint._color\n        }\n      },\n      theme: theme,\n      width: width\n    }, measureComponent.props));\n  });\n  return standalone ? React.createElement(ChartContainer, {\n    desc: ariaDesc,\n    height: height,\n    title: ariaTitle,\n    width: width\n  }, measure) : React.createElement(React.Fragment, null, measure);\n};\nChartBulletQualitativeRange.displayName = 'ChartBulletQualitativeRange'; // Note: VictoryBar.role must be hoisted\n\nhoistNonReactStatics(ChartBulletQualitativeRange, VictoryBar);","map":{"version":3,"sources":["../../../../src/components/ChartBullet/ChartBulletQualitativeRange.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { VictoryBar } from 'victory-bar';\nimport { getQualitativeRangeData } from './utils';\nimport { ChartBar } from '../ChartBar';\nimport { ChartContainer } from '../ChartContainer';\nimport { ChartBulletStyles } from '../ChartTheme';\nimport { ChartTooltip } from '../ChartTooltip';\nimport { getBulletQualitativeRangeTheme } from '../ChartUtils';\nexport const ChartBulletQualitativeRange = ({ allowTooltip = true, ariaDesc, ariaTitle, barWidth = ChartBulletStyles.qualitativeRangeWidth, constrainToVisibleArea = false, data, domain, horizontal = true, invert = false, labels, measureComponent = React.createElement(ChartBar, null), padding, standalone = true, themeColor, themeVariant, y, y0, \n// destructure last\ntheme = getBulletQualitativeRangeTheme(themeColor, themeVariant), height = theme.group.height, width = theme.group.width, labelComponent = React.createElement(ChartTooltip, null) }) => {\n    const computedData = getQualitativeRangeData({\n        data,\n        invert,\n        theme,\n        y,\n        y0\n    });\n    // Label component\n    //\n    // The x and y calculations below ensure that the tooltip appears above the bar, instead of vertically centered.\n    // Having the tooltip vertically centered is visually confusing with comparative measures.\n    //\n    // Note: SVG height and width are provided by ChartBullet as a workaround to support constrainToVisibleArea\n    const tooltip = React.cloneElement(labelComponent, Object.assign({ constrainToVisibleArea, dx: () => {\n            if (horizontal) {\n                return 0;\n            }\n            const result = typeof barWidth === 'function' ? barWidth(data) : barWidth;\n            return result / 2;\n        }, dy: () => {\n            if (!horizontal) {\n                return 0;\n            }\n            const result = typeof barWidth === 'function' ? barWidth(data) : barWidth;\n            return -(result / 2);\n        }, orientation: 'top' }, labelComponent.props));\n    const measure = computedData.map((dataPoint, index) => React.cloneElement(measureComponent, Object.assign({ barWidth, data: [Object.assign({}, dataPoint)], domain,\n        height,\n        horizontal, key: `pf-chart-bullet-qualitative-range-${index}`, labelComponent: allowTooltip ? tooltip : undefined, labels,\n        padding, standalone: false, style: {\n            data: {\n                fill: dataPoint._color\n            }\n        }, theme,\n        width }, measureComponent.props)));\n    return standalone ? (React.createElement(ChartContainer, { desc: ariaDesc, height: height, title: ariaTitle, width: width }, measure)) : (React.createElement(React.Fragment, null, measure));\n};\nChartBulletQualitativeRange.displayName = 'ChartBulletQualitativeRange';\n// Note: VictoryBar.role must be hoisted\nhoistNonReactStatics(ChartBulletQualitativeRange, VictoryBar);\n//# sourceMappingURL=ChartBulletQualitativeRange.js.map"]},"metadata":{},"sourceType":"module"}