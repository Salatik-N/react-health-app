{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { VictoryScatter } from 'victory-scatter';\nimport { ChartContainer } from '../ChartContainer';\nimport { ChartScatterStyles } from '../ChartTheme';\nimport { getTheme } from '../ChartUtils';\nexport var ChartScatterSortOrder;\n\n(function (ChartScatterSortOrder) {\n  ChartScatterSortOrder[\"ascending\"] = \"ascending\";\n  ChartScatterSortOrder[\"descending\"] = \"descending\";\n})(ChartScatterSortOrder || (ChartScatterSortOrder = {}));\n\nexport var ChartScatter = function ChartScatter(_a) {\n  var _a$containerComponent = _a.containerComponent,\n      containerComponent = _a$containerComponent === void 0 ? React.createElement(ChartContainer, null) : _a$containerComponent,\n      themeColor = _a.themeColor,\n      themeVariant = _a.themeVariant,\n      _a$theme = _a.theme,\n      theme = _a$theme === void 0 ? getTheme(themeColor, themeVariant) : _a$theme,\n      _a$size = _a.size,\n      size = _a$size === void 0 ? function (_ref) {\n    var active = _ref.active;\n    return active ? ChartScatterStyles.activeSize : ChartScatterStyles.size;\n  } : _a$size,\n      rest = __rest(_a, [\"containerComponent\", \"themeColor\", \"themeVariant\", \"theme\", \"size\"]); // Clone so users can override container props\n\n\n  var container = React.cloneElement(containerComponent, Object.assign({\n    theme: theme\n  }, containerComponent.props)); // Note: containerComponent is required for theme\n\n  return React.createElement(VictoryScatter, Object.assign({\n    containerComponent: container,\n    size: size,\n    theme: theme\n  }, rest));\n};\nChartScatter.displayName = 'ChartScatter'; // Note: VictoryLine.role must be hoisted\n\nhoistNonReactStatics(ChartScatter, VictoryScatter);","map":{"version":3,"sources":["../../../../src/components/ChartScatter/ChartScatter.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,oBAAP,MAAiC,yBAAjC;AAoBA,SAAS,cAAT,QAA+E,iBAA/E;AACA,SAAS,cAAT,QAA+B,mBAA/B;AACA,SAAS,kBAAT,QAAyD,eAAzD;AACA,SAAS,QAAT,QAAyB,eAAzB;AAEA,OAAA,IAAY,qBAAZ;;AAAA,CAAA,UAAY,qBAAZ,EAAiC;AAC/B,EAAA,qBAAA,CAAA,WAAA,CAAA,GAAA,WAAA;AACA,EAAA,qBAAA,CAAA,YAAA,CAAA,GAAA,YAAA;AACD,CAHD,EAAY,qBAAqB,KAArB,qBAAqB,GAAA,EAAA,CAAjC;;AAyaA,OAAO,IAAM,YAAY,GAA+C,SAA3D,YAA2D,CAAC,EAAD,EAShD;AATiD,8BAOkB,EAPlB,CACvE,kBADuE;AAAA,MACvE,kBADuE,sCAClD,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe,IAAf,CADkD;AAAA,MAEvE,UAFuE,GAOkB,EAPlB,CAEvE,UAFuE;AAAA,MAGvE,YAHuE,GAOkB,EAPlB,CAGvE,YAHuE;AAAA,iBAOkB,EAPlB,CAMvE,KANuE;AAAA,MAMvE,KANuE,yBAM/D,QAAQ,CAAC,UAAD,EAAa,YAAb,CANuD;AAAA,gBAOkB,EAPlB,CAOvE,IAPuE;AAAA,MAOvE,IAPuE,wBAOhE;AAAA,QAAG,MAAH,QAAG,MAAH;AAAA,WAAiB,MAAM,GAAG,kBAAkB,CAAC,UAAtB,GAAmC,kBAAkB,CAAC,IAA7E;AAAA,GAPgE;AAAA,MAQpE,IARoE,GAQhE,MAAA,CAAA,EAAA,EARgE,CAAA,oBAAA,EAAA,YAAA,EAAA,cAAA,EAAA,OAAA,EAAA,MAAA,CAQhE,CARgE,CASjD,CACtB;;;AACA,MAAM,SAAS,GAAG,KAAK,CAAC,YAAN,CAAmB,kBAAnB,EAAqC,MAAA,CAAA,MAAA,CAAA;AACrD,IAAA,KAAK,EAAL;AADqD,GAAA,EAElD,kBAAkB,CAAC,KAF+B,CAArC,CAAlB,CAFsB,CAOtB;;AACA,SAAO,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe,MAAA,CAAA,MAAA,CAAA;AAAC,IAAA,kBAAkB,EAAE,SAArB;AAAgC,IAAA,IAAI,EAAE,IAAtC;AAA4C,IAAA,KAAK,EAAE;AAAnD,GAAA,EAA8D,IAA9D,CAAf,CAAP;AACD,CAlBM;AAmBP,YAAY,CAAC,WAAb,GAA2B,cAA3B,C,CAEA;;AACA,oBAAoB,CAAC,YAAD,EAAe,cAAf,CAApB","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { VictoryScatter } from 'victory-scatter';\nimport { ChartContainer } from '../ChartContainer';\nimport { ChartScatterStyles } from '../ChartTheme';\nimport { getTheme } from '../ChartUtils';\nexport var ChartScatterSortOrder;\n(function (ChartScatterSortOrder) {\n    ChartScatterSortOrder[\"ascending\"] = \"ascending\";\n    ChartScatterSortOrder[\"descending\"] = \"descending\";\n})(ChartScatterSortOrder || (ChartScatterSortOrder = {}));\nexport const ChartScatter = (_a) => {\n    var { containerComponent = React.createElement(ChartContainer, null), themeColor, themeVariant, \n    // destructure last\n    theme = getTheme(themeColor, themeVariant), size = ({ active }) => (active ? ChartScatterStyles.activeSize : ChartScatterStyles.size) } = _a, rest = __rest(_a, [\"containerComponent\", \"themeColor\", \"themeVariant\", \"theme\", \"size\"]);\n    // Clone so users can override container props\n    const container = React.cloneElement(containerComponent, Object.assign({ theme }, containerComponent.props));\n    // Note: containerComponent is required for theme\n    return React.createElement(VictoryScatter, Object.assign({ containerComponent: container, size: size, theme: theme }, rest));\n};\nChartScatter.displayName = 'ChartScatter';\n// Note: VictoryLine.role must be hoisted\nhoistNonReactStatics(ChartScatter, VictoryScatter);\n//# sourceMappingURL=ChartScatter.js.map"]},"metadata":{},"sourceType":"module"}