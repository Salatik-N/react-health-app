{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { VictoryBar } from 'victory-bar';\nimport { ChartContainer } from '../ChartContainer';\nimport { getTheme } from '../ChartUtils';\nexport var ChartBar = function ChartBar(_a) {\n  var _a$containerComponent = _a.containerComponent,\n      containerComponent = _a$containerComponent === void 0 ? React.createElement(ChartContainer, null) : _a$containerComponent,\n      themeColor = _a.themeColor,\n      themeVariant = _a.themeVariant,\n      _a$theme = _a.theme,\n      theme = _a$theme === void 0 ? getTheme(themeColor, themeVariant) : _a$theme,\n      rest = __rest(_a, [\"containerComponent\", \"themeColor\", \"themeVariant\", \"theme\"]); // Clone so users can override container props\n\n\n  var container = React.cloneElement(containerComponent, Object.assign({\n    theme: theme\n  }, containerComponent.props)); // Note: containerComponent is required for theme\n\n  return React.createElement(VictoryBar, Object.assign({\n    containerComponent: container,\n    theme: theme\n  }, rest));\n};\nChartBar.displayName = 'ChartBar'; // Note: VictoryBar.getDomain & VictoryBar.role must be hoisted\n\nhoistNonReactStatics(ChartBar, VictoryBar);","map":{"version":3,"sources":["../../../../src/components/ChartBar/ChartBar.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,oBAAP,MAAiC,yBAAjC;AAoBA,SAAS,UAAT,QAA4F,aAA5F;AACA,SAAS,cAAT,QAA+B,mBAA/B;AAEA,SAAS,QAAT,QAAyB,eAAzB;AA6bA,OAAO,IAAM,QAAQ,GAA2C,SAAnD,QAAmD,CAAC,EAAD,EAQ5C;AAR6C,8BAMrB,EANqB,CAC/D,kBAD+D;AAAA,MAC/D,kBAD+D,sCAC1C,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe,IAAf,CAD0C;AAAA,MAE/D,UAF+D,GAMrB,EANqB,CAE/D,UAF+D;AAAA,MAG/D,YAH+D,GAMrB,EANqB,CAG/D,YAH+D;AAAA,iBAMrB,EANqB,CAM/D,KAN+D;AAAA,MAM/D,KAN+D,yBAMvD,QAAQ,CAAC,UAAD,EAAa,YAAb,CAN+C;AAAA,MAO5D,IAP4D,GAOxD,MAAA,CAAA,EAAA,EAPwD,CAAA,oBAAA,EAAA,YAAA,EAAA,cAAA,EAAA,OAAA,CAOxD,CAPwD,CAQ7C,CAClB;;;AACA,MAAM,SAAS,GAAG,KAAK,CAAC,YAAN,CAAmB,kBAAnB,EAAqC,MAAA,CAAA,MAAA,CAAA;AACrD,IAAA,KAAK,EAAL;AADqD,GAAA,EAElD,kBAAkB,CAAC,KAF+B,CAArC,CAAlB,CAFkB,CAOlB;;AACA,SAAO,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW,MAAA,CAAA,MAAA,CAAA;AAAC,IAAA,kBAAkB,EAAE,SAArB;AAAgC,IAAA,KAAK,EAAE;AAAvC,GAAA,EAAkD,IAAlD,CAAX,CAAP;AACD,CAjBM;AAkBP,QAAQ,CAAC,WAAT,GAAuB,UAAvB,C,CAEA;;AACA,oBAAoB,CAAC,QAAD,EAAW,UAAX,CAApB","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { VictoryBar } from 'victory-bar';\nimport { ChartContainer } from '../ChartContainer';\nimport { getTheme } from '../ChartUtils';\nexport const ChartBar = (_a) => {\n    var { containerComponent = React.createElement(ChartContainer, null), themeColor, themeVariant, \n    // destructure last\n    theme = getTheme(themeColor, themeVariant) } = _a, rest = __rest(_a, [\"containerComponent\", \"themeColor\", \"themeVariant\", \"theme\"]);\n    // Clone so users can override container props\n    const container = React.cloneElement(containerComponent, Object.assign({ theme }, containerComponent.props));\n    // Note: containerComponent is required for theme\n    return React.createElement(VictoryBar, Object.assign({ containerComponent: container, theme: theme }, rest));\n};\nChartBar.displayName = 'ChartBar';\n// Note: VictoryBar.getDomain & VictoryBar.role must be hoisted\nhoistNonReactStatics(ChartBar, VictoryBar);\n//# sourceMappingURL=ChartBar.js.map"]},"metadata":{},"sourceType":"module"}