{"ast":null,"code":"import _toConsumableArray from \"C:/Users/37529/react-apps/health-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:/Users/37529/react-apps/health-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { Data, Helpers } from 'victory-core';\nimport { VictoryPie } from 'victory-pie';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { ChartContainer } from '../ChartContainer';\nimport { ChartDonut } from '../ChartDonut';\nimport { ChartDonutStyles } from '../ChartTheme';\nimport { getDonutThresholdDynamicTheme, getDonutThresholdStaticTheme, getPaddingForSide } from '../ChartUtils';\nexport var ChartDonutThresholdDonutOrientation;\n\n(function (ChartDonutThresholdDonutOrientation) {\n  ChartDonutThresholdDonutOrientation[\"left\"] = \"left\";\n  ChartDonutThresholdDonutOrientation[\"right\"] = \"right\";\n  ChartDonutThresholdDonutOrientation[\"top\"] = \"top\";\n})(ChartDonutThresholdDonutOrientation || (ChartDonutThresholdDonutOrientation = {}));\n\nexport var ChartDonutThresholdLabelOrientation;\n\n(function (ChartDonutThresholdLabelOrientation) {\n  ChartDonutThresholdLabelOrientation[\"horizontal\"] = \"horizontal\";\n  ChartDonutThresholdLabelOrientation[\"vertical\"] = \"vertical\";\n})(ChartDonutThresholdLabelOrientation || (ChartDonutThresholdLabelOrientation = {}));\n\nexport var ChartDonutThresholdLabelPosition;\n\n(function (ChartDonutThresholdLabelPosition) {\n  ChartDonutThresholdLabelPosition[\"centroid\"] = \"centroid\";\n  ChartDonutThresholdLabelPosition[\"endAngle\"] = \"endAngle\";\n  ChartDonutThresholdLabelPosition[\"startAngle\"] = \"startAngle\";\n})(ChartDonutThresholdLabelPosition || (ChartDonutThresholdLabelPosition = {}));\n\nexport var ChartDonutThresholdSortOrder;\n\n(function (ChartDonutThresholdSortOrder) {\n  ChartDonutThresholdSortOrder[\"ascending\"] = \"ascending\";\n  ChartDonutThresholdSortOrder[\"descending\"] = \"descending\";\n})(ChartDonutThresholdSortOrder || (ChartDonutThresholdSortOrder = {}));\n\nexport var ChartDonutThresholdSubTitlePosition;\n\n(function (ChartDonutThresholdSubTitlePosition) {\n  ChartDonutThresholdSubTitlePosition[\"bottom\"] = \"bottom\";\n  ChartDonutThresholdSubTitlePosition[\"center\"] = \"center\";\n  ChartDonutThresholdSubTitlePosition[\"right\"] = \"right\";\n})(ChartDonutThresholdSubTitlePosition || (ChartDonutThresholdSubTitlePosition = {}));\n\nexport var ChartDonutThreshold = function ChartDonutThreshold(_a) {\n  var _a$allowTooltip = _a.allowTooltip,\n      allowTooltip = _a$allowTooltip === void 0 ? true : _a$allowTooltip,\n      ariaDesc = _a.ariaDesc,\n      ariaTitle = _a.ariaTitle,\n      children = _a.children,\n      _a$constrainToVisible = _a.constrainToVisibleArea,\n      constrainToVisibleArea = _a$constrainToVisible === void 0 ? false : _a$constrainToVisible,\n      _a$containerComponent = _a.containerComponent,\n      containerComponent = _a$containerComponent === void 0 ? React.createElement(ChartContainer, null) : _a$containerComponent,\n      _a$data = _a.data,\n      data = _a$data === void 0 ? [] : _a$data,\n      _a$invert = _a.invert,\n      invert = _a$invert === void 0 ? false : _a$invert,\n      _a$labels = _a.labels,\n      labels = _a$labels === void 0 ? [] : _a$labels,\n      padding = _a.padding,\n      radius = _a.radius,\n      _a$standalone = _a.standalone,\n      standalone = _a$standalone === void 0 ? true : _a$standalone,\n      _a$subTitlePosition = _a.subTitlePosition,\n      subTitlePosition = _a$subTitlePosition === void 0 ? ChartDonutStyles.label.subTitlePosition : _a$subTitlePosition,\n      themeColor = _a.themeColor,\n      themeVariant = _a.themeVariant,\n      x = _a.x,\n      y = _a.y,\n      _a$theme = _a.theme,\n      theme = _a$theme === void 0 ? getDonutThresholdStaticTheme(themeColor, themeVariant, invert) : _a$theme,\n      _a$height = _a.height,\n      height = _a$height === void 0 ? theme.pie.height : _a$height,\n      _a$width = _a.width,\n      width = _a$width === void 0 ? theme.pie.width : _a$width,\n      rest = __rest(_a, [\"allowTooltip\", \"ariaDesc\", \"ariaTitle\", \"children\", \"constrainToVisibleArea\", \"containerComponent\", \"data\", \"invert\", \"labels\", \"padding\", \"radius\", \"standalone\", \"subTitlePosition\", \"themeColor\", \"themeVariant\", \"x\", \"y\", \"theme\", \"height\", \"width\"]);\n\n  var defaultPadding = {\n    bottom: getPaddingForSide('bottom', padding, theme.pie.padding),\n    left: getPaddingForSide('left', padding, theme.pie.padding),\n    right: getPaddingForSide('right', padding, theme.pie.padding),\n    top: getPaddingForSide('top', padding, theme.pie.padding)\n  };\n  var chartRadius = radius || Helpers.getRadius({\n    height: height,\n    width: width,\n    padding: defaultPadding\n  }); // Returns computed data representing pie chart slices\n\n  var getComputedData = function getComputedData() {\n    // Format and sort data. Sorting ensures thresholds are displayed in the correct order and simplifies calculations.\n    var datum = Data.formatData(data, Object.assign({\n      x: x,\n      y: y\n    }, rest), ['x', 'y']).sort(function (a, b) {\n      return a._y - b._y;\n    }); // Data must be offset so that the sum of all data point y-values (including the final slice) == 100.\n\n    var _datum$reduce = datum.reduce(function (acc, dataPoint) {\n      return [dataPoint._y, [].concat(_toConsumableArray(acc[1]), [{\n        x: dataPoint._x,\n        y: dataPoint._y - acc[0] // Must be offset by previous value\n\n      }])];\n    }, [0, []]),\n        _datum$reduce2 = _slicedToArray(_datum$reduce, 2),\n        prev = _datum$reduce2[0],\n        computedData = _datum$reduce2[1];\n\n    return [].concat(_toConsumableArray(computedData), [{\n      y: prev ? 100 - prev : 0\n    }]);\n  }; // Render dynamic utilization donut cart\n\n\n  var renderChildren = function renderChildren() {\n    return React.Children.toArray(children).map(function (child, index) {\n      if (React.isValidElement(child)) {\n        var _a2 = child.props,\n            childData = _a2.data,\n            childProps = __rest(_a2, [\"data\"]);\n\n        var datum = Data.formatData([childData], childProps, ['x', 'y']); // Format child data independently of this component's props\n\n        var dynamicTheme = childProps.theme || getDonutThresholdDynamicTheme(childProps.themeColor || themeColor, childProps.themeVariant || themeVariant);\n        return React.cloneElement(child, Object.assign({\n          constrainToVisibleArea: constrainToVisibleArea,\n          data: childData,\n          endAngle: 360 * (datum[0]._y ? datum[0]._y / 100 : 0),\n          height: height,\n          invert: invert,\n          key: \"pf-chart-donut-threshold-child-\".concat(index),\n          padding: defaultPadding,\n          radius: chartRadius - 14,\n          showStatic: false,\n          standalone: false,\n          subTitlePosition: childProps.subTitlePosition || subTitlePosition,\n          theme: dynamicTheme,\n          width: width\n        }, childProps));\n      }\n\n      return child;\n    });\n  }; // Static threshold donut chart\n\n\n  var chart = React.createElement(ChartDonut, Object.assign({\n    allowTooltip: allowTooltip,\n    constrainToVisibleArea: constrainToVisibleArea,\n    data: getComputedData(),\n    height: height,\n    key: \"pf-chart-donut-threshold\",\n    labels: labels,\n    padding: defaultPadding,\n    standalone: false,\n    theme: theme,\n    width: width\n  }, rest)); // Clone so users can override container props\n\n  var container = React.cloneElement(containerComponent, Object.assign({\n    desc: ariaDesc,\n    height: height,\n    title: ariaTitle,\n    width: width,\n    theme: theme\n  }, containerComponent.props), [chart, renderChildren()]);\n  return standalone ? React.createElement(React.Fragment, null, container) : React.createElement(React.Fragment, null, chart, renderChildren());\n};\nChartDonutThreshold.displayName = 'ChartDonutThreshold'; // Note: VictoryPie.role must be hoisted\n\nhoistNonReactStatics(ChartDonutThreshold, VictoryPie);","map":{"version":3,"sources":["../../../../src/components/ChartDonutUtilization/ChartDonutThreshold.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { Data, Helpers } from 'victory-core';\nimport { VictoryPie } from 'victory-pie';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { ChartContainer } from '../ChartContainer';\nimport { ChartDonut } from '../ChartDonut';\nimport { ChartDonutStyles } from '../ChartTheme';\nimport { getDonutThresholdDynamicTheme, getDonutThresholdStaticTheme, getPaddingForSide } from '../ChartUtils';\nexport var ChartDonutThresholdDonutOrientation;\n(function (ChartDonutThresholdDonutOrientation) {\n    ChartDonutThresholdDonutOrientation[\"left\"] = \"left\";\n    ChartDonutThresholdDonutOrientation[\"right\"] = \"right\";\n    ChartDonutThresholdDonutOrientation[\"top\"] = \"top\";\n})(ChartDonutThresholdDonutOrientation || (ChartDonutThresholdDonutOrientation = {}));\nexport var ChartDonutThresholdLabelOrientation;\n(function (ChartDonutThresholdLabelOrientation) {\n    ChartDonutThresholdLabelOrientation[\"horizontal\"] = \"horizontal\";\n    ChartDonutThresholdLabelOrientation[\"vertical\"] = \"vertical\";\n})(ChartDonutThresholdLabelOrientation || (ChartDonutThresholdLabelOrientation = {}));\nexport var ChartDonutThresholdLabelPosition;\n(function (ChartDonutThresholdLabelPosition) {\n    ChartDonutThresholdLabelPosition[\"centroid\"] = \"centroid\";\n    ChartDonutThresholdLabelPosition[\"endAngle\"] = \"endAngle\";\n    ChartDonutThresholdLabelPosition[\"startAngle\"] = \"startAngle\";\n})(ChartDonutThresholdLabelPosition || (ChartDonutThresholdLabelPosition = {}));\nexport var ChartDonutThresholdSortOrder;\n(function (ChartDonutThresholdSortOrder) {\n    ChartDonutThresholdSortOrder[\"ascending\"] = \"ascending\";\n    ChartDonutThresholdSortOrder[\"descending\"] = \"descending\";\n})(ChartDonutThresholdSortOrder || (ChartDonutThresholdSortOrder = {}));\nexport var ChartDonutThresholdSubTitlePosition;\n(function (ChartDonutThresholdSubTitlePosition) {\n    ChartDonutThresholdSubTitlePosition[\"bottom\"] = \"bottom\";\n    ChartDonutThresholdSubTitlePosition[\"center\"] = \"center\";\n    ChartDonutThresholdSubTitlePosition[\"right\"] = \"right\";\n})(ChartDonutThresholdSubTitlePosition || (ChartDonutThresholdSubTitlePosition = {}));\nexport const ChartDonutThreshold = (_a) => {\n    var { allowTooltip = true, ariaDesc, ariaTitle, children, constrainToVisibleArea = false, containerComponent = React.createElement(ChartContainer, null), data = [], invert = false, labels = [], // Don't show any tooltip labels by default, let consumer override if needed\n    padding, radius, standalone = true, subTitlePosition = ChartDonutStyles.label.subTitlePosition, themeColor, themeVariant, x, y, \n    // destructure last\n    theme = getDonutThresholdStaticTheme(themeColor, themeVariant, invert), height = theme.pie.height, width = theme.pie.width } = _a, rest = __rest(_a, [\"allowTooltip\", \"ariaDesc\", \"ariaTitle\", \"children\", \"constrainToVisibleArea\", \"containerComponent\", \"data\", \"invert\", \"labels\", \"padding\", \"radius\", \"standalone\", \"subTitlePosition\", \"themeColor\", \"themeVariant\", \"x\", \"y\", \"theme\", \"height\", \"width\"]);\n    const defaultPadding = {\n        bottom: getPaddingForSide('bottom', padding, theme.pie.padding),\n        left: getPaddingForSide('left', padding, theme.pie.padding),\n        right: getPaddingForSide('right', padding, theme.pie.padding),\n        top: getPaddingForSide('top', padding, theme.pie.padding)\n    };\n    const chartRadius = radius ||\n        Helpers.getRadius({\n            height,\n            width,\n            padding: defaultPadding\n        });\n    // Returns computed data representing pie chart slices\n    const getComputedData = () => {\n        // Format and sort data. Sorting ensures thresholds are displayed in the correct order and simplifies calculations.\n        const datum = Data.formatData(data, Object.assign({ x, y }, rest), ['x', 'y']).sort((a, b) => a._y - b._y);\n        // Data must be offset so that the sum of all data point y-values (including the final slice) == 100.\n        const [prev, computedData] = datum.reduce((acc, dataPoint) => [\n            dataPoint._y,\n            [\n                ...acc[1],\n                {\n                    x: dataPoint._x,\n                    y: dataPoint._y - acc[0] // Must be offset by previous value\n                }\n            ]\n        ], [0, []]);\n        return [\n            ...computedData,\n            {\n                y: prev ? 100 - prev : 0\n            }\n        ];\n    };\n    // Render dynamic utilization donut cart\n    const renderChildren = () => React.Children.toArray(children).map((child, index) => {\n        if (React.isValidElement(child)) {\n            const _a = child.props, { data: childData } = _a, childProps = __rest(_a, [\"data\"]);\n            const datum = Data.formatData([childData], childProps, ['x', 'y']); // Format child data independently of this component's props\n            const dynamicTheme = childProps.theme ||\n                getDonutThresholdDynamicTheme(childProps.themeColor || themeColor, childProps.themeVariant || themeVariant);\n            return React.cloneElement(child, Object.assign({ constrainToVisibleArea, data: childData, endAngle: 360 * (datum[0]._y ? datum[0]._y / 100 : 0), height,\n                invert, key: `pf-chart-donut-threshold-child-${index}`, padding: defaultPadding, radius: chartRadius - 14, showStatic: false, standalone: false, subTitlePosition: childProps.subTitlePosition || subTitlePosition, theme: dynamicTheme, width }, childProps));\n        }\n        return child;\n    });\n    // Static threshold donut chart\n    const chart = (React.createElement(ChartDonut, Object.assign({ allowTooltip: allowTooltip, constrainToVisibleArea: constrainToVisibleArea, data: getComputedData(), height: height, key: \"pf-chart-donut-threshold\", labels: labels, padding: defaultPadding, standalone: false, theme: theme, width: width }, rest)));\n    // Clone so users can override container props\n    const container = React.cloneElement(containerComponent, Object.assign({ desc: ariaDesc, height, title: ariaTitle, width,\n        theme }, containerComponent.props), [chart, renderChildren()]);\n    return standalone ? (React.createElement(React.Fragment, null, container)) : (React.createElement(React.Fragment, null,\n        chart,\n        renderChildren()));\n};\nChartDonutThreshold.displayName = 'ChartDonutThreshold';\n// Note: VictoryPie.role must be hoisted\nhoistNonReactStatics(ChartDonutThreshold, VictoryPie);\n//# sourceMappingURL=ChartDonutThreshold.js.map"]},"metadata":{},"sourceType":"module"}