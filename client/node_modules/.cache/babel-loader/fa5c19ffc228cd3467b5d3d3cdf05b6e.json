{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { VictoryAxis } from 'victory-axis';\nimport { ChartContainer } from '../ChartContainer';\nimport { getAxisTheme, getTheme } from '../ChartUtils';\nexport var ChartAxis = function ChartAxis(_a) {\n  var _a$containerComponent = _a.containerComponent,\n      containerComponent = _a$containerComponent === void 0 ? React.createElement(ChartContainer, null) : _a$containerComponent,\n      _a$showGrid = _a.showGrid,\n      showGrid = _a$showGrid === void 0 ? false : _a$showGrid,\n      themeColor = _a.themeColor,\n      themeVariant = _a.themeVariant,\n      _a$theme = _a.theme,\n      theme = _a$theme === void 0 ? getTheme(themeColor, themeVariant) : _a$theme,\n      rest = __rest(_a, [\"containerComponent\", \"showGrid\", \"themeColor\", \"themeVariant\", \"theme\"]); // Clone so users can override container props\n\n\n  var container = React.cloneElement(containerComponent, Object.assign({\n    theme: theme\n  }, containerComponent.props)); // Note: containerComponent is required for theme\n\n  return React.createElement(VictoryAxis, Object.assign({\n    containerComponent: container,\n    theme: showGrid ? getAxisTheme(themeColor, themeVariant) : theme\n  }, rest));\n};\nChartAxis.displayName = 'ChartAxis';\nhoistNonReactStatics(ChartAxis, VictoryAxis);","map":{"version":3,"sources":["../../../../src/components/ChartAxis/ChartAxis.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,oBAAP,MAAiC,yBAAjC;AAeA,SAAS,WAAT,QAAsE,cAAtE;AACA,SAAS,cAAT,QAA+B,mBAA/B;AAEA,SAAS,YAAT,EAAuB,QAAvB,QAAuC,eAAvC;AAyaA,OAAO,IAAM,SAAS,GAA4C,SAArD,SAAqD,CAAC,EAAD,EAS7C;AAT8C,8BAOvB,EAPuB,CACjE,kBADiE;AAAA,MACjE,kBADiE,sCAC5C,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe,IAAf,CAD4C;AAAA,oBAOvB,EAPuB,CAEjE,QAFiE;AAAA,MAEjE,QAFiE,4BAEtD,KAFsD;AAAA,MAGjE,UAHiE,GAOvB,EAPuB,CAGjE,UAHiE;AAAA,MAIjE,YAJiE,GAOvB,EAPuB,CAIjE,YAJiE;AAAA,iBAOvB,EAPuB,CAOjE,KAPiE;AAAA,MAOjE,KAPiE,yBAOzD,QAAQ,CAAC,UAAD,EAAa,YAAb,CAPiD;AAAA,MAQ9D,IAR8D,GAQ1D,MAAA,CAAA,EAAA,EAR0D,CAAA,oBAAA,EAAA,UAAA,EAAA,YAAA,EAAA,cAAA,EAAA,OAAA,CAQ1D,CAR0D,CAS9C,CACnB;;;AACA,MAAM,SAAS,GAAG,KAAK,CAAC,YAAN,CAAmB,kBAAnB,EAAqC,MAAA,CAAA,MAAA,CAAA;AACrD,IAAA,KAAK,EAAL;AADqD,GAAA,EAElD,kBAAkB,CAAC,KAF+B,CAArC,CAAlB,CAFmB,CAOnB;;AACA,SACE,KAAA,CAAA,aAAA,CAAC,WAAD,EAAY,MAAA,CAAA,MAAA,CAAA;AACV,IAAA,kBAAkB,EAAE,SADV;AAEV,IAAA,KAAK,EAAE,QAAQ,GAAG,YAAY,CAAC,UAAD,EAAa,YAAb,CAAf,GAA4C;AAFjD,GAAA,EAGN,IAHM,CAAZ,CADF;AAOD,CAxBM;AAyBP,SAAS,CAAC,WAAV,GAAwB,WAAxB;AAEA,oBAAoB,CAAC,SAAD,EAAY,WAAZ,CAApB","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { VictoryAxis } from 'victory-axis';\nimport { ChartContainer } from '../ChartContainer';\nimport { getAxisTheme, getTheme } from '../ChartUtils';\nexport const ChartAxis = (_a) => {\n    var { containerComponent = React.createElement(ChartContainer, null), showGrid = false, themeColor, themeVariant, \n    // destructure last\n    theme = getTheme(themeColor, themeVariant) } = _a, rest = __rest(_a, [\"containerComponent\", \"showGrid\", \"themeColor\", \"themeVariant\", \"theme\"]);\n    // Clone so users can override container props\n    const container = React.cloneElement(containerComponent, Object.assign({ theme }, containerComponent.props));\n    // Note: containerComponent is required for theme\n    return (React.createElement(VictoryAxis, Object.assign({ containerComponent: container, theme: showGrid ? getAxisTheme(themeColor, themeVariant) : theme }, rest)));\n};\nChartAxis.displayName = 'ChartAxis';\nhoistNonReactStatics(ChartAxis, VictoryAxis);\n//# sourceMappingURL=ChartAxis.js.map"]},"metadata":{},"sourceType":"module"}