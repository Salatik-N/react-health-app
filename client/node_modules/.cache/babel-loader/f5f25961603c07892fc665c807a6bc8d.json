{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { VictoryStack } from 'victory-stack';\nimport { ChartContainer } from '../ChartContainer';\nimport { getClassName, getTheme } from '../ChartUtils';\nexport var ChartStack = function ChartStack(_a) {\n  var ariaDesc = _a.ariaDesc,\n      ariaTitle = _a.ariaTitle,\n      children = _a.children,\n      _a$containerComponent = _a.containerComponent,\n      containerComponent = _a$containerComponent === void 0 ? React.createElement(ChartContainer, null) : _a$containerComponent,\n      themeColor = _a.themeColor,\n      themeVariant = _a.themeVariant,\n      _a$theme = _a.theme,\n      theme = _a$theme === void 0 ? getTheme(themeColor, themeVariant) : _a$theme,\n      rest = __rest(_a, [\"ariaDesc\", \"ariaTitle\", \"children\", \"containerComponent\", \"themeColor\", \"themeVariant\", \"theme\"]); // Clone so users can override container props\n\n\n  var container = React.cloneElement(containerComponent, Object.assign(Object.assign({\n    desc: ariaDesc,\n    title: ariaTitle,\n    theme: theme\n  }, containerComponent.props), {\n    className: getClassName({\n      className: containerComponent.props.className\n    }) // Override VictoryContainer class name\n\n  })); // Note: containerComponent is required for theme\n\n  return React.createElement(VictoryStack, Object.assign({\n    containerComponent: container,\n    theme: theme\n  }, rest), children);\n};\nChartStack.displayName = 'ChartStack'; // Note: VictoryStack.getChildren & VictoryStack.role must be hoisted\n\nhoistNonReactStatics(ChartStack, VictoryStack);","map":{"version":3,"sources":["../../../../src/components/ChartStack/ChartStack.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,oBAAP,MAAiC,yBAAjC;AAiBA,SAAS,YAAT,QAAyE,eAAzE;AACA,SAAS,cAAT,QAA+B,mBAA/B;AAEA,SAAS,YAAT,EAAuB,QAAvB,QAAuC,eAAvC;AAyWA,OAAO,IAAM,UAAU,GAA6C,SAAvD,UAAuD,CAAC,EAAD,EAW9C;AAX+C,MACnE,QADmE,GASzB,EATyB,CACnE,QADmE;AAAA,MAEnE,SAFmE,GASzB,EATyB,CAEnE,SAFmE;AAAA,MAGnE,QAHmE,GASzB,EATyB,CAGnE,QAHmE;AAAA,8BASzB,EATyB,CAInE,kBAJmE;AAAA,MAInE,kBAJmE,sCAI9C,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe,IAAf,CAJ8C;AAAA,MAKnE,UALmE,GASzB,EATyB,CAKnE,UALmE;AAAA,MAMnE,YANmE,GASzB,EATyB,CAMnE,YANmE;AAAA,iBASzB,EATyB,CASnE,KATmE;AAAA,MASnE,KATmE,yBAS3D,QAAQ,CAAC,UAAD,EAAa,YAAb,CATmD;AAAA,MAUhE,IAVgE,GAU5D,MAAA,CAAA,EAAA,EAV4D,CAAA,UAAA,EAAA,WAAA,EAAA,UAAA,EAAA,oBAAA,EAAA,YAAA,EAAA,cAAA,EAAA,OAAA,CAU5D,CAV4D,CAW/C,CACpB;;;AACA,MAAM,SAAS,GAAG,KAAK,CAAC,YAAN,CAAmB,kBAAnB,EAAqC,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA;AACrD,IAAA,IAAI,EAAE,QAD+C;AAErD,IAAA,KAAK,EAAE,SAF8C;AAGrD,IAAA,KAAK,EAAL;AAHqD,GAAA,EAIlD,kBAAkB,CAAC,KAJ+B,CAAA,EAI1B;AAC3B,IAAA,SAAS,EAAE,YAAY,CAAC;AAAE,MAAA,SAAS,EAAE,kBAAkB,CAAC,KAAnB,CAAyB;AAAtC,KAAD,CADI,CACgD;;AADhD,GAJ0B,CAArC,CAAlB,CAFoB,CAUpB;;AACA,SACE,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa,MAAA,CAAA,MAAA,CAAA;AAAC,IAAA,kBAAkB,EAAE,SAArB;AAAgC,IAAA,KAAK,EAAE;AAAvC,GAAA,EAAkD,IAAlD,CAAb,EACG,QADH,CADF;AAKD,CA3BM;AA4BP,UAAU,CAAC,WAAX,GAAyB,YAAzB,C,CAEA;;AACA,oBAAoB,CAAC,UAAD,EAAa,YAAb,CAApB","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { VictoryStack } from 'victory-stack';\nimport { ChartContainer } from '../ChartContainer';\nimport { getClassName, getTheme } from '../ChartUtils';\nexport const ChartStack = (_a) => {\n    var { ariaDesc, ariaTitle, children, containerComponent = React.createElement(ChartContainer, null), themeColor, themeVariant, \n    // destructure last\n    theme = getTheme(themeColor, themeVariant) } = _a, rest = __rest(_a, [\"ariaDesc\", \"ariaTitle\", \"children\", \"containerComponent\", \"themeColor\", \"themeVariant\", \"theme\"]);\n    // Clone so users can override container props\n    const container = React.cloneElement(containerComponent, Object.assign(Object.assign({ desc: ariaDesc, title: ariaTitle, theme }, containerComponent.props), { className: getClassName({ className: containerComponent.props.className }) // Override VictoryContainer class name\n     }));\n    // Note: containerComponent is required for theme\n    return (React.createElement(VictoryStack, Object.assign({ containerComponent: container, theme: theme }, rest), children));\n};\nChartStack.displayName = 'ChartStack';\n// Note: VictoryStack.getChildren & VictoryStack.role must be hoisted\nhoistNonReactStatics(ChartStack, VictoryStack);\n//# sourceMappingURL=ChartStack.js.map"]},"metadata":{},"sourceType":"module"}