{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { Helpers } from 'victory-core';\nimport { VictoryTooltip } from 'victory-tooltip';\nimport { ChartLabel } from '../ChartLabel';\nimport { ChartTooltip } from '../ChartTooltip';\nimport { getTheme, getCursorTooltipCenterOffset, getCursorTooltipPoniterOrientation } from '../ChartUtils';\nimport { ChartCursorFlyout } from './ChartCursorFlyout';\nexport var ChartCursorTooltip = function ChartCursorTooltip(_a) {\n  var _a$constrainToVisible = _a.constrainToVisibleArea,\n      constrainToVisibleArea = _a$constrainToVisible === void 0 ? true : _a$constrainToVisible,\n      _a$flyoutComponent = _a.flyoutComponent,\n      flyoutComponent = _a$flyoutComponent === void 0 ? React.createElement(ChartCursorFlyout, null) : _a$flyoutComponent,\n      _a$labelComponent = _a.labelComponent,\n      labelComponent = _a$labelComponent === void 0 ? React.createElement(ChartLabel, null) : _a$labelComponent,\n      _a$labelTextAnchor = _a.labelTextAnchor,\n      labelTextAnchor = _a$labelTextAnchor === void 0 ? 'start' : _a$labelTextAnchor,\n      _a$showPointer = _a.showPointer,\n      showPointer = _a$showPointer === void 0 ? true : _a$showPointer,\n      style = _a.style,\n      themeColor = _a.themeColor,\n      themeVariant = _a.themeVariant,\n      _a$theme = _a.theme,\n      theme = _a$theme === void 0 ? getTheme(themeColor, themeVariant) : _a$theme,\n      _a$centerOffset = _a.centerOffset,\n      centerOffset = _a$centerOffset === void 0 ? getCursorTooltipCenterOffset({\n    offsetCursorDimensionX: true,\n    theme: theme\n  }) : _a$centerOffset,\n      _a$pointerOrientation = _a.pointerOrientation,\n      pointerOrientation = _a$pointerOrientation === void 0 ? getCursorTooltipPoniterOrientation({\n    horizontal: true,\n    theme: theme\n  }) : _a$pointerOrientation,\n      _a$pointerLength = _a.pointerLength,\n      pointerLength = _a$pointerLength === void 0 ? showPointer && theme && theme.tooltip ? theme.tooltip.pointerLength : 0 : _a$pointerLength,\n      _a$pointerWidth = _a.pointerWidth,\n      pointerWidth = _a$pointerWidth === void 0 ? theme.tooltip.pointerWidth : _a$pointerWidth,\n      rest = __rest(_a, [\"constrainToVisibleArea\", \"flyoutComponent\", \"labelComponent\", \"labelTextAnchor\", \"showPointer\", \"style\", \"themeColor\", \"themeVariant\", \"theme\", \"centerOffset\", \"pointerOrientation\", \"pointerLength\", \"pointerWidth\"]); // Apply text anchor style\n\n\n  var applyDefaultStyle = function applyDefaultStyle(customStyle) {\n    return Object.assign(Object.assign({}, customStyle), {\n      textAnchor: labelTextAnchor // Workaround for VictoryTooltip.getLabelProps referencing the theme style only\n\n    });\n  };\n\n  var newStyle = Array.isArray(style) ? style.map(applyDefaultStyle) : applyDefaultStyle(style);\n\n  var getFlyoutComponent = function getFlyoutComponent() {\n    var _pointerLength = Helpers.evaluateProp(pointerLength);\n\n    if (showPointer && _pointerLength === 0) {\n      _pointerLength = theme && theme.tooltip ? Helpers.evaluateProp(theme.tooltip.pointerLength) : 10;\n    }\n\n    return React.cloneElement(flyoutComponent, Object.assign({\n      pointerLength: _pointerLength,\n      pointerWidth: pointerWidth\n    }, flyoutComponent.props));\n  };\n\n  return React.createElement(ChartTooltip, Object.assign({\n    centerOffset: centerOffset,\n    constrainToVisibleArea: constrainToVisibleArea,\n    flyoutComponent: getFlyoutComponent(),\n    labelComponent: labelComponent,\n    labelTextAnchor: labelTextAnchor,\n    pointerOrientation: pointerOrientation,\n    style: newStyle,\n    theme: theme\n  }, rest));\n};\nChartCursorTooltip.displayName = 'ChartCursorTooltip'; // Note: VictoryTooltip.defaultEvents must be hoisted\n\nhoistNonReactStatics(ChartCursorTooltip, VictoryTooltip);","map":{"version":3,"sources":["../../../../src/components/ChartCursorTooltip/ChartCursorTooltip.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,oBAAP,MAAiC,yBAAjC;AACA,SACE,OADF,QAOO,cAPP;AAQA,SAAS,cAAT,QAA+B,iBAA/B;AACA,SAAS,UAAT,QAA2B,eAA3B;AAEA,SAAS,YAAT,QAAgD,iBAAhD;AACA,SAAS,QAAT,EAAmB,4BAAnB,EAAiD,kCAAjD,QAA2F,eAA3F;AACA,SAAS,iBAAT,QAAkC,qBAAlC;AAiQA,OAAO,IAAM,kBAAkB,GAAqD,SAAvE,kBAAuE,CAAC,EAAD,EAiBtD;AAjBuD,8BAejC,EAfiC,CACnF,sBADmF;AAAA,MACnF,sBADmF,sCAC1D,IAD0D;AAAA,2BAejC,EAfiC,CAEnF,eAFmF;AAAA,MAEnF,eAFmF,mCAEjE,KAAA,CAAA,aAAA,CAAC,iBAAD,EAAkB,IAAlB,CAFiE;AAAA,0BAejC,EAfiC,CAGnF,cAHmF;AAAA,MAGnF,cAHmF,kCAGlE,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW,IAAX,CAHkE;AAAA,2BAejC,EAfiC,CAInF,eAJmF;AAAA,MAInF,eAJmF,mCAIjE,OAJiE;AAAA,uBAejC,EAfiC,CAKnF,WALmF;AAAA,MAKnF,WALmF,+BAKrE,IALqE;AAAA,MAMnF,KANmF,GAejC,EAfiC,CAMnF,KANmF;AAAA,MAOnF,UAPmF,GAejC,EAfiC,CAOnF,UAPmF;AAAA,MAQnF,YARmF,GAejC,EAfiC,CAQnF,YARmF;AAAA,iBAejC,EAfiC,CAWnF,KAXmF;AAAA,MAWnF,KAXmF,yBAW3E,QAAQ,CAAC,UAAD,EAAa,YAAb,CAXmE;AAAA,wBAejC,EAfiC,CAYnF,YAZmF;AAAA,MAYnF,YAZmF,gCAYpE,4BAA4B,CAAC;AAAE,IAAA,sBAAsB,EAAE,IAA1B;AAAgC,IAAA,KAAK,EAAL;AAAhC,GAAD,CAZwC;AAAA,8BAejC,EAfiC,CAanF,kBAbmF;AAAA,MAanF,kBAbmF,sCAa9D,kCAAkC,CAAC;AAAE,IAAA,UAAU,EAAE,IAAd;AAAoB,IAAA,KAAK,EAAL;AAApB,GAAD,CAb4B;AAAA,yBAejC,EAfiC,CAcnF,aAdmF;AAAA,MAcnF,aAdmF,iCAcnE,WAAW,IAAI,KAAf,IAAwB,KAAK,CAAC,OAA9B,GAAwC,KAAK,CAAC,OAAN,CAAc,aAAtD,GAAsE,CAdH;AAAA,wBAejC,EAfiC,CAenF,YAfmF;AAAA,MAenF,YAfmF,gCAenE,KAAK,CAAC,OAAN,CAAsB,YAf6C;AAAA,MAgBhF,IAhBgF,GAgB5E,MAAA,CAAA,EAAA,EAhB4E,CAAA,wBAAA,EAAA,iBAAA,EAAA,gBAAA,EAAA,iBAAA,EAAA,aAAA,EAAA,OAAA,EAAA,YAAA,EAAA,cAAA,EAAA,OAAA,EAAA,cAAA,EAAA,oBAAA,EAAA,eAAA,EAAA,cAAA,CAgB5E,CAhB4E,CAiBvD,CAC5B;;;AACA,MAAM,iBAAiB,GAAG,SAApB,iBAAoB,CAAC,WAAD;AAAA,WAAsC,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAC3D,WAD2D,CAAA,EAChD;AACd,MAAA,UAAU,EAAE,eADE,CACc;;AADd,KADgD,CAAtC;AAAA,GAA1B;;AAIA,MAAM,QAAQ,GAAQ,KAAK,CAAC,OAAN,CAAc,KAAd,IAAuB,KAAK,CAAC,GAAN,CAAU,iBAAV,CAAvB,GAAsD,iBAAiB,CAAC,KAAD,CAA7F;;AAEA,MAAM,kBAAkB,GAAG,SAArB,kBAAqB,GAAK;AAC9B,QAAI,cAAc,GAAG,OAAO,CAAC,YAAR,CAAqB,aAArB,CAArB;;AACA,QAAI,WAAW,IAAI,cAAc,KAAK,CAAtC,EAAyC;AACvC,MAAA,cAAc,GAAG,KAAK,IAAI,KAAK,CAAC,OAAf,GAAyB,OAAO,CAAC,YAAR,CAAqB,KAAK,CAAC,OAAN,CAAc,aAAnC,CAAzB,GAA6E,EAA9F;AACD;;AACD,WAAO,KAAK,CAAC,YAAN,CAAmB,eAAnB,EAAkC,MAAA,CAAA,MAAA,CAAA;AACvC,MAAA,aAAa,EAAE,cADwB;AAEvC,MAAA,YAAY,EAAZ;AAFuC,KAAA,EAGpC,eAAe,CAAC,KAHoB,CAAlC,CAAP;AAKD,GAVD;;AAYA,SACE,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa,MAAA,CAAA,MAAA,CAAA;AACX,IAAA,YAAY,EAAE,YADH;AAEX,IAAA,sBAAsB,EAAE,sBAFb;AAGX,IAAA,eAAe,EAAE,kBAAkB,EAHxB;AAIX,IAAA,cAAc,EAAE,cAJL;AAKX,IAAA,eAAe,EAAE,eALN;AAMX,IAAA,kBAAkB,EAAE,kBANT;AAOX,IAAA,KAAK,EAAE,QAPI;AAQX,IAAA,KAAK,EAAE;AARI,GAAA,EASP,IATO,CAAb,CADF;AAaD,CAlDM;AAmDP,kBAAkB,CAAC,WAAnB,GAAiC,oBAAjC,C,CAEA;;AACA,oBAAoB,CAAC,kBAAD,EAAqB,cAArB,CAApB","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { Helpers } from 'victory-core';\nimport { VictoryTooltip } from 'victory-tooltip';\nimport { ChartLabel } from '../ChartLabel';\nimport { ChartTooltip } from '../ChartTooltip';\nimport { getTheme, getCursorTooltipCenterOffset, getCursorTooltipPoniterOrientation } from '../ChartUtils';\nimport { ChartCursorFlyout } from './ChartCursorFlyout';\nexport const ChartCursorTooltip = (_a) => {\n    var { constrainToVisibleArea = true, flyoutComponent = React.createElement(ChartCursorFlyout, null), labelComponent = React.createElement(ChartLabel, null), labelTextAnchor = 'start', showPointer = true, style, themeColor, themeVariant, \n    // destructure last\n    theme = getTheme(themeColor, themeVariant), centerOffset = getCursorTooltipCenterOffset({ offsetCursorDimensionX: true, theme }), pointerOrientation = getCursorTooltipPoniterOrientation({ horizontal: true, theme }), pointerLength = showPointer && theme && theme.tooltip ? theme.tooltip.pointerLength : 0, pointerWidth = theme.tooltip.pointerWidth } = _a, rest = __rest(_a, [\"constrainToVisibleArea\", \"flyoutComponent\", \"labelComponent\", \"labelTextAnchor\", \"showPointer\", \"style\", \"themeColor\", \"themeVariant\", \"theme\", \"centerOffset\", \"pointerOrientation\", \"pointerLength\", \"pointerWidth\"]);\n    // Apply text anchor style\n    const applyDefaultStyle = (customStyle) => (Object.assign(Object.assign({}, customStyle), { textAnchor: labelTextAnchor // Workaround for VictoryTooltip.getLabelProps referencing the theme style only\n     }));\n    const newStyle = Array.isArray(style) ? style.map(applyDefaultStyle) : applyDefaultStyle(style);\n    const getFlyoutComponent = () => {\n        let _pointerLength = Helpers.evaluateProp(pointerLength);\n        if (showPointer && _pointerLength === 0) {\n            _pointerLength = theme && theme.tooltip ? Helpers.evaluateProp(theme.tooltip.pointerLength) : 10;\n        }\n        return React.cloneElement(flyoutComponent, Object.assign({ pointerLength: _pointerLength, pointerWidth }, flyoutComponent.props));\n    };\n    return (React.createElement(ChartTooltip, Object.assign({ centerOffset: centerOffset, constrainToVisibleArea: constrainToVisibleArea, flyoutComponent: getFlyoutComponent(), labelComponent: labelComponent, labelTextAnchor: labelTextAnchor, pointerOrientation: pointerOrientation, style: newStyle, theme: theme }, rest)));\n};\nChartCursorTooltip.displayName = 'ChartCursorTooltip';\n// Note: VictoryTooltip.defaultEvents must be hoisted\nhoistNonReactStatics(ChartCursorTooltip, VictoryTooltip);\n//# sourceMappingURL=ChartCursorTooltip.js.map"]},"metadata":{},"sourceType":"module"}