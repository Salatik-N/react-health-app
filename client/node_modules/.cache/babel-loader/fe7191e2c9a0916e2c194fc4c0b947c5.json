{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { VictoryChart } from 'victory-chart';\nimport { ChartContainer } from '../ChartContainer';\nimport { ChartLegend, ChartLegendPosition } from '../ChartLegend';\nimport { ChartCommonStyles } from '../ChartTheme';\nimport { getClassName, getComputedLegend, getLabelTextSize, getPaddingForSide, getTheme } from '../ChartUtils';\nexport var Chart = function Chart(_a) {\n  var ariaDesc = _a.ariaDesc,\n      ariaTitle = _a.ariaTitle,\n      children = _a.children,\n      _a$legendAllowWrap = _a.legendAllowWrap,\n      legendAllowWrap = _a$legendAllowWrap === void 0 ? false : _a$legendAllowWrap,\n      _a$legendComponent = _a.legendComponent,\n      legendComponent = _a$legendComponent === void 0 ? React.createElement(ChartLegend, null) : _a$legendComponent,\n      legendData = _a.legendData,\n      _a$legendPosition = _a.legendPosition,\n      legendPosition = _a$legendPosition === void 0 ? ChartCommonStyles.legend.position : _a$legendPosition,\n      padding = _a.padding,\n      themeColor = _a.themeColor,\n      themeVariant = _a.themeVariant,\n      _a$theme = _a.theme,\n      theme = _a$theme === void 0 ? getTheme(themeColor, themeVariant) : _a$theme,\n      _a$containerComponent = _a.containerComponent,\n      containerComponent = _a$containerComponent === void 0 ? React.createElement(ChartContainer, null) : _a$containerComponent,\n      _a$legendOrientation = _a.legendOrientation,\n      legendOrientation = _a$legendOrientation === void 0 ? theme.legend.orientation : _a$legendOrientation,\n      _a$height = _a.height,\n      height = _a$height === void 0 ? theme.chart.height : _a$height,\n      _a$width = _a.width,\n      width = _a$width === void 0 ? theme.chart.width : _a$width,\n      rest = __rest(_a, [\"ariaDesc\", \"ariaTitle\", \"children\", \"legendAllowWrap\", \"legendComponent\", \"legendData\", \"legendPosition\", \"padding\", \"themeColor\", \"themeVariant\", \"theme\", \"containerComponent\", \"legendOrientation\", \"height\", \"width\"]);\n\n  var defaultPadding = {\n    bottom: getPaddingForSide('bottom', padding, theme.chart.padding),\n    left: getPaddingForSide('left', padding, theme.chart.padding),\n    right: getPaddingForSide('right', padding, theme.chart.padding),\n    top: getPaddingForSide('top', padding, theme.chart.padding)\n  }; // Clone so users can override container props\n\n  var container = React.cloneElement(containerComponent, Object.assign(Object.assign({\n    desc: ariaDesc,\n    title: ariaTitle,\n    theme: theme\n  }, containerComponent.props), {\n    className: getClassName({\n      className: containerComponent.props.className\n    }) // Override VictoryContainer class name\n\n  }));\n  var legend = React.cloneElement(legendComponent, Object.assign({\n    data: legendData,\n    orientation: legendOrientation,\n    theme: theme\n  }, legendComponent.props)); // Returns a computed legend\n\n  var getLegend = function getLegend() {\n    if (!legend.props.data) {\n      return null;\n    }\n\n    var dx = 0;\n    var dy = 0;\n    var xAxisLabelHeight = 0;\n    var legendTitleHeight = legend.props.title ? 10 : 0; // Adjust for axis label\n\n    React.Children.toArray(children).map(function (child) {\n      if (child.type.role === 'axis' && child.props.label && !child.props.dependentAxis) {\n        xAxisLabelHeight = getLabelTextSize({\n          text: child.props.label,\n          theme: theme\n        }).height + 10;\n        legendTitleHeight = 0;\n      }\n    });\n\n    if (legendPosition === ChartLegendPosition.bottom) {\n      dy += xAxisLabelHeight + legendTitleHeight;\n    } else if (legendPosition === ChartLegendPosition.bottomLeft) {\n      dy += xAxisLabelHeight + legendTitleHeight;\n      dx = -10;\n    }\n\n    return getComputedLegend({\n      allowWrap: legendAllowWrap,\n      chartType: 'chart',\n      dx: dx,\n      dy: dy,\n      height: height,\n      legendComponent: legend,\n      padding: defaultPadding,\n      position: legendPosition,\n      theme: theme,\n      width: width\n    });\n  }; // Note: containerComponent is required for theme\n\n\n  var VictoryChartWithContainerComponent = VictoryChart;\n  return React.createElement(VictoryChartWithContainerComponent, Object.assign({\n    containerComponent: container,\n    height: height,\n    padding: defaultPadding,\n    theme: theme,\n    width: width\n  }, rest), children, getLegend());\n};\nChart.displayName = 'Chart';\nhoistNonReactStatics(Chart, VictoryChart);","map":{"version":3,"sources":["../../../../src/components/Chart/Chart.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { VictoryChart } from 'victory-chart';\nimport { ChartContainer } from '../ChartContainer';\nimport { ChartLegend, ChartLegendPosition } from '../ChartLegend';\nimport { ChartCommonStyles } from '../ChartTheme';\nimport { getClassName, getComputedLegend, getLabelTextSize, getPaddingForSide, getTheme } from '../ChartUtils';\nexport const Chart = (_a) => {\n    var { ariaDesc, ariaTitle, children, legendAllowWrap = false, legendComponent = React.createElement(ChartLegend, null), legendData, legendPosition = ChartCommonStyles.legend.position, padding, themeColor, themeVariant, \n    // destructure last\n    theme = getTheme(themeColor, themeVariant), containerComponent = React.createElement(ChartContainer, null), legendOrientation = theme.legend.orientation, height = theme.chart.height, width = theme.chart.width } = _a, rest = __rest(_a, [\"ariaDesc\", \"ariaTitle\", \"children\", \"legendAllowWrap\", \"legendComponent\", \"legendData\", \"legendPosition\", \"padding\", \"themeColor\", \"themeVariant\", \"theme\", \"containerComponent\", \"legendOrientation\", \"height\", \"width\"]);\n    const defaultPadding = {\n        bottom: getPaddingForSide('bottom', padding, theme.chart.padding),\n        left: getPaddingForSide('left', padding, theme.chart.padding),\n        right: getPaddingForSide('right', padding, theme.chart.padding),\n        top: getPaddingForSide('top', padding, theme.chart.padding)\n    };\n    // Clone so users can override container props\n    const container = React.cloneElement(containerComponent, Object.assign(Object.assign({ desc: ariaDesc, title: ariaTitle, theme }, containerComponent.props), { className: getClassName({ className: containerComponent.props.className }) // Override VictoryContainer class name\n     }));\n    const legend = React.cloneElement(legendComponent, Object.assign({ data: legendData, orientation: legendOrientation, theme }, legendComponent.props));\n    // Returns a computed legend\n    const getLegend = () => {\n        if (!legend.props.data) {\n            return null;\n        }\n        let dx = 0;\n        let dy = 0;\n        let xAxisLabelHeight = 0;\n        let legendTitleHeight = legend.props.title ? 10 : 0;\n        // Adjust for axis label\n        React.Children.toArray(children).map((child) => {\n            if (child.type.role === 'axis' && child.props.label && !child.props.dependentAxis) {\n                xAxisLabelHeight = getLabelTextSize({ text: child.props.label, theme }).height + 10;\n                legendTitleHeight = 0;\n            }\n        });\n        if (legendPosition === ChartLegendPosition.bottom) {\n            dy += xAxisLabelHeight + legendTitleHeight;\n        }\n        else if (legendPosition === ChartLegendPosition.bottomLeft) {\n            dy += xAxisLabelHeight + legendTitleHeight;\n            dx = -10;\n        }\n        return getComputedLegend({\n            allowWrap: legendAllowWrap,\n            chartType: 'chart',\n            dx,\n            dy,\n            height,\n            legendComponent: legend,\n            padding: defaultPadding,\n            position: legendPosition,\n            theme,\n            width\n        });\n    };\n    // Note: containerComponent is required for theme\n    const VictoryChartWithContainerComponent = VictoryChart;\n    return (React.createElement(VictoryChartWithContainerComponent, Object.assign({ containerComponent: container, height: height, padding: defaultPadding, theme: theme, width: width }, rest),\n        children,\n        getLegend()));\n};\nChart.displayName = 'Chart';\nhoistNonReactStatics(Chart, VictoryChart);\n//# sourceMappingURL=Chart.js.map"]},"metadata":{},"sourceType":"module"}