[{"C:\\Users\\37529\\react-apps\\health-app\\client\\src\\index.js":"1","C:\\Users\\37529\\react-apps\\health-app\\client\\src\\App.js":"2","C:\\Users\\37529\\react-apps\\health-app\\client\\src\\pages\\index.js":"3","C:\\Users\\37529\\react-apps\\health-app\\client\\src\\components\\index.js":"4","C:\\Users\\37529\\react-apps\\health-app\\client\\src\\pages\\StartPage.jsx":"5","C:\\Users\\37529\\react-apps\\health-app\\client\\src\\pages\\MainPage.jsx":"6","C:\\Users\\37529\\react-apps\\health-app\\client\\src\\components\\UserInfo.jsx":"7","C:\\Users\\37529\\react-apps\\health-app\\client\\src\\components\\Menu.jsx":"8","C:\\Users\\37529\\react-apps\\health-app\\client\\src\\components\\Main.jsx":"9","C:\\Users\\37529\\react-apps\\health-app\\client\\src\\components\\AboutProducts.jsx":"10","C:\\Users\\37529\\react-apps\\health-app\\client\\src\\components\\ProductsBlock.jsx":"11","C:\\Users\\37529\\react-apps\\health-app\\client\\src\\components\\SearchHeader.jsx":"12","C:\\Users\\37529\\react-apps\\health-app\\client\\src\\components\\ProductsBlock_v2.jsx":"13","C:\\Users\\37529\\react-apps\\health-app\\client\\src\\Routes.js":"14"},{"size":310,"mtime":1620078993107,"results":"15","hashOfConfig":"16"},{"size":279,"mtime":1621909304244,"results":"17","hashOfConfig":"16"},{"size":100,"mtime":1620134009712,"results":"18","hashOfConfig":"16"},{"size":376,"mtime":1621887646940,"results":"19","hashOfConfig":"16"},{"size":5696,"mtime":1621184924023,"results":"20","hashOfConfig":"16"},{"size":970,"mtime":1621973099437,"results":"21","hashOfConfig":"16"},{"size":845,"mtime":1620928145528,"results":"22","hashOfConfig":"16"},{"size":968,"mtime":1621974478821,"results":"23","hashOfConfig":"16"},{"size":11521,"mtime":1621609169855,"results":"24","hashOfConfig":"16"},{"size":1190,"mtime":1621973329476,"results":"25","hashOfConfig":"16"},{"size":2947,"mtime":1621891117065,"results":"26","hashOfConfig":"16"},{"size":1086,"mtime":1621973636227,"results":"27","hashOfConfig":"16"},{"size":1148,"mtime":1621973463025,"results":"28","hashOfConfig":"16"},{"size":369,"mtime":1621909324007,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"7oel6h",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\37529\\react-apps\\health-app\\client\\src\\index.js",[],["62","63"],"C:\\Users\\37529\\react-apps\\health-app\\client\\src\\App.js",[],"C:\\Users\\37529\\react-apps\\health-app\\client\\src\\pages\\index.js",[],"C:\\Users\\37529\\react-apps\\health-app\\client\\src\\components\\index.js",[],"C:\\Users\\37529\\react-apps\\health-app\\client\\src\\pages\\StartPage.jsx",[],"C:\\Users\\37529\\react-apps\\health-app\\client\\src\\pages\\MainPage.jsx",[],"C:\\Users\\37529\\react-apps\\health-app\\client\\src\\components\\UserInfo.jsx",[],"C:\\Users\\37529\\react-apps\\health-app\\client\\src\\components\\Menu.jsx",["64","65"],"C:\\Users\\37529\\react-apps\\health-app\\client\\src\\components\\Main.jsx",[],"C:\\Users\\37529\\react-apps\\health-app\\client\\src\\components\\AboutProducts.jsx",["66"],"import React, {useState} from \"react\"\r\nimport Axios from 'axios'\r\n\r\nimport { ProductsBlock_v2, SearchHeader } from './index'\r\n\r\nfunction AboutProducts() {\r\n\r\n  const [products, setProducts] = React.useState([]);\r\n  const [isLoading, setIsLoading] = React.useState(true);\r\n  React.useEffect(() => {\r\n    Axios.get('http://localhost:5000/api/users').then(({data}) => {\r\n      setProducts(data)\r\n      setIsLoading(false)\r\n    })\r\n  }, []);\r\n\r\n  const [search, setSearch] = useState('')\r\n\r\n  if (isLoading) {\r\n    return <span>Загрузка...</span>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <SearchHeader \r\n        onSearch = {setSearch}\r\n        name={products.name}/>\r\n      <div className=\"block-cards\">\r\n          {\r\n            products.filter(category=>category.products.find(product=>product.name.toLowerCase().includes(search.toLowerCase())\r\n              )).map((obj) => \r\n            <ProductsBlock_v2\r\n              imgsrc = {obj.imgsrc}\r\n              search = {search}\r\n              title={obj.category}\r\n              data={obj.products}\r\n              setIsLoading={setIsLoading}/>\r\n            )\r\n          }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AboutProducts","C:\\Users\\37529\\react-apps\\health-app\\client\\src\\components\\ProductsBlock.jsx",["67","68"],"import React, {useState} from \"react\"\r\nimport { ChartPie, ChartThemeColor } from '@patternfly/react-charts';\r\n\r\nimport fatsImg from '../assets/trans-fat.png'\r\nimport caloriesImg from '../assets/calories.png'\r\nimport carbohydratesImg from '../assets/wheat.png'\r\nimport proteinsImg from '../assets/molecule.png'\r\n\r\nfunction ProductsBlock({name, kcal, proteins, fats, carbohydrates}) {\r\n\r\n    const [isOpenProduct, setIsOpenProduct] = useState(false);\r\n    let all = carbohydrates + proteins + fats;\r\n\r\n  return (\r\n      <div className={isOpenProduct === false ? \"row products-block\" : \"row products-block w-100\"}>\r\n        <div className={isOpenProduct === false ? \"products-info\" : \"products-info w-50\"}>\r\n            <div className=\"products-block__title\">\r\n                <span className=\"text-uppercase font-weight-bold\">\r\n                    {name}\r\n                </span>\r\n                <a onClick= {() => setIsOpenProduct(!isOpenProduct)}>\r\n                {isOpenProduct === false ? \"Подробнее\" : \"Свернуть\"}\r\n                </a>\r\n            </div>\r\n            <p>\r\n                <img src={caloriesImg} alt=\"Калории\"/>\r\n                <span className=\"w-100 text-left ml-2\">Калорийность(кКал)</span><span>{kcal}</span>\r\n            </p>\r\n            <p>\r\n                <img src={proteinsImg} alt=\"Белки\"/>\r\n                <span className=\"w-100 text-left ml-2\">Белки(г.)</span><span>{proteins}</span>\r\n            </p>\r\n            <p>\r\n                <img src={fatsImg} alt=\"Жиры\"/>\r\n                <span className=\"w-100 text-left ml-2\">Жиры(г.)</span><span>{fats}</span>\r\n            </p>\r\n            <p>\r\n                <img src={carbohydratesImg} alt=\"Углеводы\"/>\r\n                <span className=\"w-100 text-left ml-2\">Углеводы(г.)</span><span>{carbohydrates}</span>\r\n            </p>\r\n        </div>\r\n        <div className={isOpenProduct === false ? \"products-info d-none\" : \"products-info text-center w-50\"}>\r\n            <div style={{ height: '100%', width: '100%' }}>\r\n            <ChartPie\r\n                ariaTitle=\"Соотношение белков, жиров и углеводов\"\r\n                constrainToVisibleArea={true}\r\n                data={[{ x: 'Белки', y: proteins/all * 100 }, \r\n                { x: 'Жиры', y: fats/all * 100 }, \r\n                { x: 'Углеводы', y: carbohydrates/all * 100 }]}\r\n                height={150}\r\n                labels={({ datum }) => `${datum.x}: ${Math.round(datum.y)}%`}\r\n                width={350}\r\n                legendData={[{ name: 'Белки' }, { name: 'Жиры' }, { name: 'Углеводы' }]}\r\n                legendOrientation=\"vertical\"\r\n                legendPosition=\"right\"\r\n                title={kcal}\r\n                subTitle=\"kCal\"\r\n                />\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductsBlock","C:\\Users\\37529\\react-apps\\health-app\\client\\src\\components\\SearchHeader.jsx",[],"C:\\Users\\37529\\react-apps\\health-app\\client\\src\\components\\ProductsBlock_v2.jsx",["69"],"import React,{ useState, useEffect } from \"react\"\r\n\r\nimport { ProductsBlock } from './index'\r\n\r\nfunction ProductsBlock_v2({title, data, search, imgsrc}) {\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    useEffect(() => {\r\n       if(search.length){\r\n        setIsOpen(true)\r\n       }\r\n    }, [search])\r\n\r\n  return (\r\n    <div \r\n    className={isOpen === false ? \"category-block\" : \"category-block w-100\"}>\r\n        <div className=\"category-title\"\r\n        onClick = {() => setIsOpen(!isOpen)}>\r\n          <img src={imgsrc} alt={title}/>\r\n          <p>{title}</p>\r\n          <a className={isOpen === false ? \"d-none\": \"h6 w-20 m-auto text-muted\"}\r\n          onClick = {() => setIsOpen(!isOpen)}>\r\n            Нажмите, чтобы свернуть\r\n          </a>\r\n        </div>\r\n        <div className=\"row justify-content-sm-around\">\r\n        {\r\n          isOpen && \r\n          data.filter(product=>product.name.toLowerCase().includes(search.toLowerCase())).map((product) => (\r\n          <ProductsBlock \r\n          key = {product.id}\r\n          {...product}/>))\r\n        }</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductsBlock_v2","C:\\Users\\37529\\react-apps\\health-app\\client\\src\\Routes.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":5,"column":3,"nodeType":"76","messageId":"77","endLine":5,"endColumn":13,"fix":"78"},{"ruleId":"74","severity":1,"message":"79","line":6,"column":3,"nodeType":"76","messageId":"77","endLine":6,"endColumn":15,"fix":"80"},{"ruleId":"81","severity":1,"message":"82","line":32,"column":13,"nodeType":"83","messageId":"84","endLine":37,"endColumn":44},{"ruleId":"85","severity":1,"message":"86","line":2,"column":20,"nodeType":"87","messageId":"88","endLine":2,"endColumn":35},{"ruleId":"89","severity":1,"message":"90","line":21,"column":17,"nodeType":"83","endLine":21,"endColumn":70},{"ruleId":"89","severity":1,"message":"90","line":21,"column":11,"nodeType":"83","endLine":22,"endColumn":48},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-useless-computed-key","Unnecessarily computed property [\"/\"] found.","Property","unnecessarilyComputedProperty",{"range":"93","text":"94"},"Unnecessarily computed property [\"/about\"] found.",{"range":"95","text":"96"},"react/jsx-pascal-case","Imported JSX component ProductsBlock_v2 must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","no-unused-vars","'ChartThemeColor' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",[107,112],"\"/\"",[122,132],"\"/about\""]